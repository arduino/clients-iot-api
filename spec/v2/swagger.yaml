consumes:
- application/json
- application/x-www-form-urlencoded
definitions:
  ArduinoAction:
    description: ArduinoAction media type (default view)
    properties:
      created_by:
        description: Id of the user who created the action
        format: uuid
        type: string
      description:
        description: The description of the action
        type: string
      email:
        $ref: '#/definitions/email_action'
      id:
        description: The id of the action
        format: uuid
        type: string
      kind:
        description: The kind of the action
        enum:
        - NOTIFY-EMAIL
        - NOTIFY-PUSH
        example: NOTIFY-EMAIL
        type: string
      name:
        description: The name of the action
        type: string
      organization_id:
        description: Id of the organization the trigger belongs to
        format: uuid
        type: string
      push_notification:
        $ref: '#/definitions/push_action'
      trigger_id:
        description: Id of the trigger the action is associated to
        format: uuid
        type: string
    title: 'Mediatype identifier: application/vnd.arduino.action+json; view=default'
    type: object
  ArduinoActionCollection:
    description: ArduinoActionCollection is the media type for an array of ArduinoAction
      (default view)
    items:
      $ref: '#/definitions/ArduinoAction'
    title: 'Mediatype identifier: application/vnd.arduino.action+json; type=collection;
      view=default'
    type: array
  ArduinoBinary:
    description: ArduinoBinary media type (default view)
    properties:
      bin:
        description: The BASE64 encoded binary file
        type: string
      filename:
        description: The binary filename
        type: string
      fqbn:
        description: The FQBN of the board the binary run to
        type: string
      name:
        description: The sketch name
        type: string
      sha256:
        description: The md5 hash of the binary file
        type: string
    required:
    - name
    - filename
    - bin
    - fqbn
    - sha256
    title: 'Mediatype identifier: application/vnd.arduino.binary+json; view=default'
    type: object
  ArduinoClient:
    description: ArduinoClient media type (default view)
    properties:
      created_at:
        description: Creation time
        format: date-time
        type: string
      id:
        description: The client_id of the client
        type: string
      name:
        description: The friendly name of the client
        type: string
      secret:
        description: The client_secret of the client
        type: string
    required:
    - id
    - name
    - secret
    - created_at
    title: 'Mediatype identifier: application/vnd.arduino.client+json; view=default'
    type: object
  ArduinoClientCollection:
    description: ArduinoClientCollection is the media type for an array of ArduinoClient
      (default view)
    items:
      $ref: '#/definitions/ArduinoClient'
    title: 'Mediatype identifier: application/vnd.arduino.client+json; type=collection;
      view=default'
    type: array
  ArduinoCompressedv1:
    description: compressed contains the info from which to generate the certificate
      (default view)
    properties:
      not_after:
        description: The ending date of the certificate
        format: date-time
        type: string
      not_before:
        description: The starting date of the certificate
        format: date-time
        type: string
      serial:
        description: The serial number of the certificate
        type: string
      signature:
        description: The signature of the certificate
        type: string
    required:
    - serial
    - not_before
    - not_after
    - signature
    title: 'Mediatype identifier: application/vnd.arduino.compressedv1; view=default'
    type: object
  ArduinoCompressedv2:
    description: compressed contains the info from which to generate the certificate
      (default view)
    properties:
      authority_key_identifier:
        description: The Authority Key Identifier of the certificate
        type: string
      not_after:
        description: The ending date of the certificate
        format: date-time
        type: string
      not_before:
        description: The starting date of the certificate
        format: date-time
        type: string
      serial:
        description: The serial number of the certificate
        type: string
      signature:
        description: The signature of the certificate
        type: string
      signature_asn1_x:
        description: The ASN1 X component of certificate signature
        type: string
      signature_asn1_y:
        description: The ASN1 Y component of certificate signature
        type: string
    required:
    - serial
    - not_before
    - not_after
    - signature
    - signature_asn1_x
    - signature_asn1_y
    title: 'Mediatype identifier: application/vnd.arduino.compressedv2; view=default'
    type: object
  ArduinoCredentialsv1:
    description: ArduinoCredentialsv1 media type (default view)
    properties:
      friendly_name:
        description: Friendly name
        type: string
      required:
        description: Tell if the parameter is required or not
        type: boolean
      secret_name:
        description: The secret parameter name
        type: string
      sensitive:
        description: Tell if the field is sensitive
        type: boolean
    required:
    - secret_name
    - required
    - friendly_name
    - sensitive
    title: 'Mediatype identifier: application/vnd.arduino.credentialsv1+json; view=default'
    type: object
  ArduinoCredentialsv1Collection:
    description: ArduinoCredentialsv1Collection is the media type for an array of
      ArduinoCredentialsv1 (default view)
    items:
      $ref: '#/definitions/ArduinoCredentialsv1'
    title: 'Mediatype identifier: application/vnd.arduino.credentialsv1+json; type=collection;
      view=default'
    type: array
  ArduinoDashboardowner:
    description: ArduinoDashboardowner media type (default view)
    properties:
      user_id:
        description: The userID of the user who created the dashboard
        format: uuid
        type: string
      username:
        description: The username of the user who created the dashboard
        type: string
    required:
    - user_id
    title: 'Mediatype identifier: application/vnd.arduino.dashboardowner+json; view=default'
    type: object
  ArduinoDashboardshare:
    description: ArduinoDashboardshare media type (default view)
    properties:
      user_id:
        description: The userID of the user you want to share the dashboard with
        format: uuid
        type: string
      username:
        description: The username of the user you want to share the dashboard with
        type: string
    required:
    - user_id
    title: 'Mediatype identifier: application/vnd.arduino.dashboardshare+json; view=default'
    type: object
  ArduinoDashboardshareCollection:
    description: ArduinoDashboardshareCollection is the media type for an array of
      ArduinoDashboardshare (default view)
    items:
      $ref: '#/definitions/ArduinoDashboardshare'
    title: 'Mediatype identifier: application/vnd.arduino.dashboardshare+json; type=collection;
      view=default'
    type: array
  ArduinoDashboardv2:
    description: Dashboard is a collection of widgets (default view)
    properties:
      created_by:
        $ref: '#/definitions/ArduinoDashboardowner'
      id:
        description: The friendly name of the dashboard
        format: uuid
        type: string
      name:
        description: The friendly name of the dashboard
        type: string
      organization_id:
        description: Id of the organization the dashboard belongs to
        format: uuid
        type: string
      shared_by:
        $ref: '#/definitions/ArduinoDashboardshare'
      shared_with:
        $ref: '#/definitions/ArduinoDashboardshareCollection'
      updated_at:
        description: Last update date
        format: date-time
        type: string
      widgets:
        $ref: '#/definitions/ArduinoWidgetv2Collection'
    required:
    - id
    - name
    - updated_at
    title: 'Mediatype identifier: application/vnd.arduino.dashboardv2+json; view=default'
    type: object
  ArduinoDashboardv2Collection:
    description: ArduinoDashboardv2Collection is the media type for an array of ArduinoDashboardv2
      (default view)
    items:
      $ref: '#/definitions/ArduinoDashboardv2'
    title: 'Mediatype identifier: application/vnd.arduino.dashboardv2+json; type=collection;
      view=default'
    type: array
  ArduinoDashboardv2template:
    description: ArduinoDashboardv2template media type (default view)
    properties:
      name:
        description: The friendly name of the dashboard
        type: string
      widgets:
        $ref: '#/definitions/ArduinoWidgetv2templateCollection'
    required:
    - name
    title: 'Mediatype identifier: application/vnd.arduino.dashboardv2template+json;
      view=default'
    type: object
  ArduinoDevicev1:
    description: ArduinoDevicev1 media type (default view)
    properties:
      certificate:
        description: The attached certificate
        type: string
      compressed:
        $ref: '#/definitions/ArduinoCompressedv1'
      href:
        description: The api reference of this device
        type: string
      id:
        description: The arn of the device
        type: string
      label:
        description: The label of the device
        type: string
      name:
        description: The friendly name of the device
        type: string
      serial:
        description: The serial uuid of the device
        type: string
      type:
        description: The type of the device
        type: string
      user_id:
        description: The id of the user
        format: uuid
        type: string
    required:
    - id
    - user_id
    - href
    title: 'Mediatype identifier: application/vnd.arduino.devicev1+json; view=default'
    type: object
  ArduinoDevicev1Collection:
    description: ArduinoDevicev1Collection is the media type for an array of ArduinoDevicev1
      (default view)
    items:
      $ref: '#/definitions/ArduinoDevicev1'
    title: 'Mediatype identifier: application/vnd.arduino.devicev1+json; type=collection;
      view=default'
    type: array
  ArduinoDevicev2:
    description: ArduinoDevicev2 media type (default view)
    properties:
      connection_type:
        description: The type of the connections selected by the user when multiple
          connections are available
        enum:
        - wifi
        - eth
        - wifiandsecret
        - gsm
        - nb
        - lora
        type: string
      created_at:
        description: Creation date of the device
        format: date-time
        type: string
      device_status:
        description: The connection status of the device
        enum:
        - ONLINE
        - OFFLINE
        - UNKNOWN
        type: string
      events:
        $ref: '#/definitions/ArduinoDevicev2SimplePropertiesCollection'
      fqbn:
        description: The fully qualified board name
        type: string
      href:
        description: The api reference of this device
        type: string
      id:
        description: The arn of the device
        format: uuid
        type: string
      label:
        description: The label of the device
        type: string
      last_activity_at:
        description: Last activity date
        format: date-time
        type: string
      latest_wifi_fw_version:
        description: The latest version of the NINA/WIFI101 firmware available for
          this device
        type: string
      metadata:
        additionalProperties: true
        description: The metadata of the device
        type: object
      name:
        description: The friendly name of the device
        type: string
      no_sketch:
        description: True if the device type can not have an associated sketch
        type: boolean
      organization_id:
        description: Id of the organization the device belongs to
        format: uuid
        type: string
      ota_available:
        description: True if the device type is ready to receive OTA updated
        type: boolean
      ota_compatible:
        description: True if the device type is OTA compatible
        type: boolean
      required_wifi_fw_version:
        description: The required version of the NINA/WIFI101 firmware needed by IoT
          Cloud
        type: string
      serial:
        description: The serial uuid of the device
        type: string
      tags:
        additionalProperties: true
        description: Tags belonging to the device
        type: object
      thing:
        $ref: '#/definitions/ArduinoThing'
      type:
        description: The type of the device
        type: string
      user_id:
        description: The id of the user
        format: uuid
        type: string
      webhooks:
        $ref: '#/definitions/ArduinoDevicev2WebhookCollection'
      wifi_fw_version:
        description: The version of the NINA/WIFI101 firmware running on the device
        type: string
    required:
    - id
    - name
    - type
    - label
    - user_id
    - href
    - serial
    title: 'Mediatype identifier: application/vnd.arduino.devicev2+json; view=default'
    type: object
  ArduinoDevicev2Cert:
    description: DeviceCertV2 describes a certificate associated to the device (default
      view)
    properties:
      ca:
        description: The Certification Authority used to sign the certificate
        type: string
      compressed:
        $ref: '#/definitions/ArduinoCompressedv2'
      der:
        description: The certificate in DER format
        type: string
      device_id:
        description: The unique identifier of the device
        format: uuid
        type: string
      enabled:
        default: true
        description: Whether the certificate is enabled
        type: boolean
      href:
        description: The api reference of this cert
        type: string
      id:
        description: The unique identifier of the key
        format: uuid
        type: string
      pem:
        description: The certificate in pem format
        example: "-----BEGIN CERTIFICATE-----\n\t\t\tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAryQICCl6NZ5gDKrnSztO\n\t\t\t3Hy8PEUcuyvg/ikC+VcIo2SFFSf18a3IMYldIugqqqZCs4/4uVW3sbdLs/6PfgdX\n\t\t\t7O9D22ZiFWHPYA2k2N744MNiCD1UE+tJyllUhSblK48bn+v1oZHCM0nYQ2NqUkvS\n\t\t\tj+hwUU3RiWl7x3D2s9wSdNt7XUtW05a/FXehsPSiJfKvHJJnGOX0BgTvkLnkAOTd\n\t\t\tOrUZ/wK69Dzu4IvrN4vs9Nes8vbwPa/ddZEzGR0cQMt0JBkhk9kU/qwqUseP1QRJ\n\t\t\t5I1jR4g8aYPL/ke9K35PxZWuDp3U0UPAZ3PjFAh+5T+fc7gzCs9dPzSHloruU+gl\n\t\t\tFQIDAQAB\n\t\t\t-----END
          CERTIFICATE-----"
        maxLength: 512
        type: string
    required:
    - id
    - device_id
    - enabled
    - pem
    - der
    - compressed
    - href
    title: 'Mediatype identifier: application/vnd.arduino.devicev2.cert+json; view=default'
    type: object
  ArduinoDevicev2CertCollection:
    description: ArduinoDevicev2CertCollection is the media type for an array of ArduinoDevicev2Cert
      (default view)
    items:
      $ref: '#/definitions/ArduinoDevicev2Cert'
    title: 'Mediatype identifier: application/vnd.arduino.devicev2.cert+json; type=collection;
      view=default'
    type: array
  ArduinoDevicev2Collection:
    description: ArduinoDevicev2Collection is the media type for an array of ArduinoDevicev2
      (default view)
    items:
      $ref: '#/definitions/ArduinoDevicev2'
    title: 'Mediatype identifier: application/vnd.arduino.devicev2+json; type=collection;
      view=default'
    type: array
  ArduinoDevicev2EventProperties:
    description: ArduinoDevicev2EventProperties media type (default view)
    properties:
      events:
        $ref: '#/definitions/ArduinoDevicev2SimplePropertiesCollection'
      id:
        description: The device of the property
        format: uuid
        type: string
    required:
    - id
    - events
    title: 'Mediatype identifier: application/vnd.arduino.devicev2.event.properties+json;
      view=default'
    type: object
  ArduinoDevicev2Pass:
    description: DeviceCertV2 describes a password associated to a device (default
      view)
    properties:
      set:
        description: Whether the password is set or not
        type: boolean
      suggested_password:
        description: A random suggested password
        type: string
    required:
    - set
    title: 'Mediatype identifier: application/vnd.arduino.devicev2.pass+json; view=default'
    type: object
  ArduinoDevicev2Pubkey:
    description: DevicePubkeyV2 describes a public key associated to the device (default
      view)
    properties:
      device_id:
        description: The unique identifier of the device
        format: uuid
        type: string
      enabled:
        default: true
        description: Whether the public key is enabled
        type: boolean
      expire:
        description: When the public key will expire
        format: date-time
        type: string
      href:
        description: The api reference of this pubkey
        type: string
      id:
        description: The unique identifier of the key
        format: uuid
        type: string
      pem:
        description: The public key in pem format
        example: "-----BEGIN PUBLIC KEY-----\n\t\t\tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAryQICCl6NZ5gDKrnSztO\n\t\t\t3Hy8PEUcuyvg/ikC+VcIo2SFFSf18a3IMYldIugqqqZCs4/4uVW3sbdLs/6PfgdX\n\t\t\t7O9D22ZiFWHPYA2k2N744MNiCD1UE+tJyllUhSblK48bn+v1oZHCM0nYQ2NqUkvS\n\t\t\tj+hwUU3RiWl7x3D2s9wSdNt7XUtW05a/FXehsPSiJfKvHJJnGOX0BgTvkLnkAOTd\n\t\t\tOrUZ/wK69Dzu4IvrN4vs9Nes8vbwPa/ddZEzGR0cQMt0JBkhk9kU/qwqUseP1QRJ\n\t\t\t5I1jR4g8aYPL/ke9K35PxZWuDp3U0UPAZ3PjFAh+5T+fc7gzCs9dPzSHloruU+gl\n\t\t\tFQIDAQAB\n\t\t\t-----END
          PUBLIC KEY-----"
        maxLength: 512
        type: string
    required:
    - id
    - device_id
    - enabled
    - expire
    - pem
    - href
    title: 'Mediatype identifier: application/vnd.arduino.devicev2.pubkey+json; view=default'
    type: object
  ArduinoDevicev2PubkeyCollection:
    description: ArduinoDevicev2PubkeyCollection is the media type for an array of
      ArduinoDevicev2Pubkey (default view)
    items:
      $ref: '#/definitions/ArduinoDevicev2Pubkey'
    title: 'Mediatype identifier: application/vnd.arduino.devicev2.pubkey+json; type=collection;
      view=default'
    type: array
  ArduinoDevicev2SimpleProperties:
    description: ArduinoDevicev2SimpleProperties media type (default view)
    properties:
      name:
        description: The name of the property
        type: string
      updated_at:
        description: Update date of the property
        format: date-time
        type: string
      value:
        description: Value of the property
    required:
    - name
    - value
    - updated_at
    title: 'Mediatype identifier: application/vnd.arduino.devicev2.simple.properties+json;
      view=default'
    type: object
  ArduinoDevicev2SimplePropertiesCollection:
    description: ArduinoDevicev2SimplePropertiesCollection is the media type for an
      array of ArduinoDevicev2SimpleProperties (default view)
    items:
      $ref: '#/definitions/ArduinoDevicev2SimpleProperties'
    title: 'Mediatype identifier: application/vnd.arduino.devicev2.simple.properties+json;
      type=collection; view=default'
    type: array
  ArduinoDevicev2StatusEvent:
    description: ArduinoDevicev2StatusEvent media type (default view)
    properties:
      updated_at:
        description: Update timestamp of the status event
        format: date-time
        type: string
      value:
        description: The status event of the device
        enum:
        - CONNECTED
        - DISCONNECTED
        type: string
    required:
    - value
    - updated_at
    title: 'Mediatype identifier: application/vnd.arduino.devicev2.status.event+json;
      view=default'
    type: object
  ArduinoDevicev2StatusEventCollection:
    description: ArduinoDevicev2StatusEventCollection is the media type for an array
      of ArduinoDevicev2StatusEvent (default view)
    items:
      $ref: '#/definitions/ArduinoDevicev2StatusEvent'
    title: 'Mediatype identifier: application/vnd.arduino.devicev2.status.event+json;
      type=collection; view=default'
    type: array
  ArduinoDevicev2StatusEvents:
    description: ArduinoDevicev2StatusEvents media type (default view)
    properties:
      events:
        $ref: '#/definitions/ArduinoDevicev2StatusEventCollection'
      id:
        description: The id of the device
        format: uuid
        type: string
    required:
    - id
    - events
    title: 'Mediatype identifier: application/vnd.arduino.devicev2.status.events+json;
      view=default'
    type: object
  ArduinoDevicev2Webhook:
    description: DeviceWebhookV2 describes a webhook associated to the device (default
      view)
    properties:
      active:
        default: true
        description: Whether the webhook is active
        type: boolean
      id:
        description: The uuid of the webhook
        format: uuid
        type: string
      uri:
        description: The uri of the webhook
        format: uri
        type: string
    required:
    - id
    - uri
    title: 'Mediatype identifier: application/vnd.arduino.devicev2.webhook+json; view=default'
    type: object
  ArduinoDevicev2WebhookCollection:
    description: ArduinoDevicev2WebhookCollection is the media type for an array of
      ArduinoDevicev2Webhook (default view)
    items:
      $ref: '#/definitions/ArduinoDevicev2Webhook'
    title: 'Mediatype identifier: application/vnd.arduino.devicev2.webhook+json; type=collection;
      view=default'
    type: array
  ArduinoDevicev2properties:
    description: ArduinoDevicev2properties media type (default view)
    properties:
      data_retention_days:
        description: How many days the data will be kept
        format: double
        type: number
      deviceId:
        description: The device of the property
        format: uuid
        type: string
      properties:
        $ref: '#/definitions/ArduinoPropertyCollection'
      user_id:
        description: The user id of the owner
        format: uuid
        type: string
    required:
    - deviceId
    - user_id
    - data_retention_days
    - properties
    title: 'Mediatype identifier: application/vnd.arduino.devicev2properties+json;
      view=default'
    type: object
  ArduinoDevicev2propertyvalue:
    description: ArduinoDevicev2propertyvalue media type (default view)
    properties:
      created_at:
        format: date-time
        type: string
      value:
        properties:
          payload:
            type: string
          seqno:
            format: int64
            type: integer
          statistics:
            properties:
              adr:
                format: double
                type: number
              channel:
                format: double
                type: number
              duplicate:
                format: double
                type: number
              freq:
                format: double
                type: number
              modBW:
                format: double
                type: number
              rssi:
                format: double
                type: number
              seqno:
                format: double
                type: number
              sf:
                format: double
                type: number
              snr:
                format: double
                type: number
              time:
                format: double
                type: number
            type: object
        type: object
    title: 'Mediatype identifier: application/vnd.arduino.devicev2propertyvalue+json;
      view=default'
    type: object
  ArduinoDevicev2propertyvalueCollection:
    description: ArduinoDevicev2propertyvalueCollection is the media type for an array
      of ArduinoDevicev2propertyvalue (default view)
    items:
      $ref: '#/definitions/ArduinoDevicev2propertyvalue'
    title: 'Mediatype identifier: application/vnd.arduino.devicev2propertyvalue+json;
      type=collection; view=default'
    type: array
  ArduinoDevicev2propertyvalues:
    description: ArduinoDevicev2propertyvalues media type (default view)
    properties:
      id:
        type: string
      last_evaluated_key:
        properties:
          created_at:
            format: date-time
            type: string
          id:
            type: string
          name:
            type: string
        type: object
      name:
        type: string
      values:
        $ref: '#/definitions/ArduinoDevicev2propertyvalueCollection'
    required:
    - id
    - last_evaluated_key
    - name
    - values
    title: 'Mediatype identifier: application/vnd.arduino.devicev2propertyvalues+json;
      view=default'
    type: object
  ArduinoLinked_property:
    description: ArduinoLinked_property media type (default view)
    properties:
      property:
        $ref: '#/definitions/ArduinoProperty'
      status:
        description: The status of the linked property
        enum:
        - OK
        - WRONG_TYPE
        - DELETED
        example: OK
        type: string
    required:
    - status
    - property
    title: 'Mediatype identifier: application/vnd.arduino.linked_property+json; view=default'
    type: object
  ArduinoLinkedvariable:
    description: ArduinoLinkedvariable media type (default view)
    properties:
      id:
        description: The id of the linked variable
        format: uuid
        type: string
      last_value:
        description: Last value of the linked property
      last_value_updated_at:
        description: Update date of the last value
        format: date-time
        type: string
      name:
        description: The name of the variable
        type: string
      permission:
        description: The permission of the linked variable
        type: string
      thing_id:
        description: The id of the related thing
        format: uuid
        type: string
      thing_name:
        description: The name of the related thing
        type: string
      thing_timezone:
        $ref: '#/definitions/ArduinoTimezone'
      type:
        description: The type of the variable
        type: string
      variable_name:
        description: The name of the variable in the code
        type: string
    required:
    - id
    - name
    - variable_name
    - thing_id
    - thing_name
    - type
    - permission
    title: 'Mediatype identifier: application/vnd.arduino.linkedvariable+json; view=default'
    type: object
  ArduinoLinkedvariableCollection:
    description: ArduinoLinkedvariableCollection is the media type for an array of
      ArduinoLinkedvariable (default view)
    items:
      $ref: '#/definitions/ArduinoLinkedvariable'
    title: 'Mediatype identifier: application/vnd.arduino.linkedvariable+json; type=collection;
      view=default'
    type: array
  ArduinoLoraappsv1:
    description: ArduinoLoraappsv1 media type (default view)
    properties:
      apps:
        description: The list of apps
        items:
          $ref: '#/definitions/ArduinoLoraappv1'
        type: array
    required:
    - apps
    title: 'Mediatype identifier: application/vnd.arduino.loraappsv1+json; view=default'
    type: object
  ArduinoLoraappv1:
    description: ArduinoLoraappv1 media type (default view)
    properties:
      app_eui:
        default: ""
        description: The eui of the app
        type: string
      name:
        description: The name of the app
        type: string
    required:
    - name
    title: 'Mediatype identifier: application/vnd.arduino.loraappv1+json; view=default'
    type: object
  ArduinoLoradevicev1:
    description: ArduinoLoradevicev1 media type (default view)
    properties:
      app_eui:
        description: The eui of the app
        type: string
      app_key:
        description: The key of the device
        type: string
      device_id:
        description: The id of the device
        format: uuid
        type: string
      eui:
        description: The eui of the lora device
        example: "71619230301"
        type: string
    required:
    - eui
    - device_id
    - app_eui
    - app_key
    title: 'Mediatype identifier: application/vnd.arduino.loradevicev1+json; view=default'
    type: object
  ArduinoLorafreqplansv1:
    description: ArduinoLorafreqplansv1 media type (default view)
    properties:
      frequency_plans:
        description: The list of frequency plans
        items:
          $ref: '#/definitions/ArduinoLorafreqplanv1'
        type: array
    title: 'Mediatype identifier: application/vnd.arduino.lorafreqplansv1+json; view=default'
    type: object
  ArduinoLorafreqplanv1:
    description: ArduinoLorafreqplanv1 media type (default view)
    properties:
      advanced:
        description: Frequency plan only for advanced users
        type: boolean
      id:
        description: The ID of the frequency paln
        type: string
      name:
        description: The name of the frequency plan
        type: string
    required:
    - name
    - id
    - advanced
    title: 'Mediatype identifier: application/vnd.arduino.lorafreqplanv1+json; view=default'
    type: object
  ArduinoLoragwv1:
    description: ArduinoLoragwv1 media type (default view)
    properties:
      aws_id:
        description: The id of the aws thing
        type: string
      id:
        description: The id of the lora gateway. It's calculated from the mac using
          magic
        example: "71619230301"
        type: string
      mac:
        description: The mac/serial_number/device_code of the lora gateway. It is
          printed on the box, and used to connect to tts.
        type: string
      pub:
        description: The public key of the lora gateway
        example: |-
          -----BEGIN PUBLIC KEY-----
          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAryQICCl6NZ5gDKrnSztO
          3Hy8PEUcuyvg/ikC+VcIo2SFFSf18a3IMYldIugqqqZCs4/4uVW3sbdLs/6PfgdX
          7O9D22ZiFWHPYA2k2N744MNiCD1UE+tJyllUhSblK48bn+v1oZHCM0nYQ2NqUkvS
          j+hwUU3RiWl7x3D2s9wSdNt7XUtW05a/FXehsPSiJfKvHJJnGOX0BgTvkLnkAOTd
          OrUZ/wK69Dzu4IvrN4vs9Nes8vbwPa/ddZEzGR0cQMt0JBkhk9kU/qwqUseP1QRJ
          5I1jR4g8aYPL/ke9K35PxZWuDp3U0UPAZ3PjFAh+5T+fc7gzCs9dPzSHloruU+gl
          FQIDAQAB
          -----END PUBLIC KEY-----
        type: string
      reachable:
        description: True if the gateway is connected false if cannot be reachable
        type: boolean
    required:
    - id
    - pub
    - mac
    - aws_id
    title: 'Mediatype identifier: application/vnd.arduino.loragwv1+json; view=default'
    type: object
  ArduinoMqttv1:
    description: ArduinoMqttv1 media type (default view)
    properties:
      signed_websocket:
        description: A signed Websocket url to use to connect to things in the cloud
        type: string
      url:
        description: The url endpoint of the cloud
        type: string
    required:
    - url
    - signed_websocket
    title: 'Mediatype identifier: application/vnd.arduino.mqttv1+json; view=default'
    type: object
  ArduinoProperty:
    description: ArduinoProperty media type (default view)
    properties:
      created_at:
        description: Creation date of the property
        format: date-time
        type: string
      deleted_at:
        description: Delete date of the property
        format: date-time
        type: string
      href:
        description: The api reference of this property
        type: string
      id:
        description: The id of the property
        format: uuid
        type: string
      last_value:
        description: Last value of this property
      linked_to_trigger:
        description: Indicates if the property is involved in the activation of at
          least a trigger
        type: boolean
      max_value:
        description: Maximum value of this property
        format: double
        type: number
      min_value:
        description: Minimum value of this property
        format: double
        type: number
      name:
        description: The friendly name of the property
        type: string
      permission:
        description: The permission of the property
        type: string
      persist:
        description: If true, data will persist into a timeseries database
        type: boolean
      sync_id:
        description: The id of the sync pool
        format: uuid
        type: string
      tag:
        description: The integer id of the property
        format: int64
        type: integer
      thing_id:
        description: The id of the thing
        format: uuid
        type: string
      thing_name:
        description: The name of the associated thing
        type: string
      type:
        description: The type of the property
        type: string
      update_parameter:
        description: The update frequency in seconds, or the amount of the property
          has to change in order to trigger an update
        format: double
        type: number
      update_strategy:
        description: The update strategy for the property value
        type: string
      updated_at:
        description: Update date of the property
        format: date-time
        type: string
      value_updated_at:
        description: Last update timestamp of this property
        format: date-time
        type: string
      variable_name:
        description: The sketch variable name of the property
        type: string
    required:
    - id
    - thing_id
    - name
    - type
    - permission
    - update_strategy
    - href
    title: 'Mediatype identifier: application/vnd.arduino.property+json; view=default'
    type: object
  ArduinoPropertyCollection:
    description: ArduinoPropertyCollection is the media type for an array of ArduinoProperty
      (default view)
    items:
      $ref: '#/definitions/ArduinoProperty'
    title: 'Mediatype identifier: application/vnd.arduino.property+json; type=collection;
      view=default'
    type: array
  ArduinoPropertytype:
    description: ArduinoPropertytype media type (default view)
    properties:
      declaration:
        description: The c++ type we are using for this variable type
        type: string
      deprecated:
        description: Tell if this type is deprecated
        type: boolean
      example:
        description: Example of use
        type: string
      name:
        description: The friendly name of the property type
        type: string
      rw:
        description: Tell if the type allow a R/W permission
        type: boolean
      supersededBy:
        description: The type of property to use if it's deprecated
        type: string
      tags:
        description: The tags related to the type
        items:
          type: string
        type: array
      type:
        description: The api reference of this type
        type: string
      units:
        description: The measure units available for this type
        items:
          type: string
        type: array
    required:
    - name
    - deprecated
    - rw
    - type
    - declaration
    title: 'Mediatype identifier: application/vnd.arduino.propertytype+json; view=default'
    type: object
  ArduinoPropertytypeCollection:
    description: ArduinoPropertytypeCollection is the media type for an array of ArduinoPropertytype
      (default view)
    items:
      $ref: '#/definitions/ArduinoPropertytype'
    title: 'Mediatype identifier: application/vnd.arduino.propertytype+json; type=collection;
      view=default'
    type: array
  ArduinoSeriesBatch:
    description: ArduinoSeriesBatch media type (default view)
    properties:
      resp_version:
        description: Response version
        format: int64
        type: integer
      responses:
        description: Responses of the request
        items:
          $ref: '#/definitions/ArduinoSeriesResponse'
        type: array
    required:
    - responses
    - resp_version
    title: 'Mediatype identifier: application/vnd.arduino.series.batch+json; view=default'
    type: object
  ArduinoSeriesRawBatch:
    description: ArduinoSeriesRawBatch media type (default view)
    properties:
      resp_version:
        description: Response version
        format: int64
        type: integer
      responses:
        description: Responses of the request
        items:
          $ref: '#/definitions/ArduinoSeriesRawResponse'
        type: array
    required:
    - responses
    - resp_version
    title: 'Mediatype identifier: application/vnd.arduino.series.raw.batch+json; view=default'
    type: object
  ArduinoSeriesRawBatchLastvalue:
    description: ArduinoSeriesRawBatchLastvalue media type (default view)
    properties:
      responses:
        description: Responses of the request
        items:
          $ref: '#/definitions/ArduinoSeriesRawLastValueResponse'
        type: array
      status:
        description: Status of the response
        type: string
    required:
    - status
    - responses
    title: 'Mediatype identifier: application/vnd.arduino.series.raw.batch.lastvalue+json;
      view=default'
    type: object
  ArduinoSeriesRawLastValueResponse:
    description: ArduinoSeriesRawLastValueResponse media type (default view)
    properties:
      count_values:
        description: Total number of values in the array 'values'
        format: int64
        type: integer
      property_id:
        description: Property id
        format: uuid
        type: string
      thing_id:
        description: Thing id
        format: uuid
        type: string
      times:
        description: Timestamp in RFC3339
        items:
          format: date-time
          type: string
        type: array
      values:
        description: Values can be in Float, String, Bool, Object
        items: {}
        type: array
    required:
    - thing_id
    - property_id
    - count_values
    - values
    - times
    title: 'Mediatype identifier: application/vnd.arduino.series.raw.last.value.response+json;
      view=default'
    type: object
  ArduinoSeriesRawResponse:
    description: ArduinoSeriesRawResponse media type (default view)
    properties:
      count_values:
        description: Total number of values in the array 'values'
        format: int64
        type: integer
      from_date:
        description: From date
        format: date-time
        type: string
      message:
        default: ""
        description: If the response is different than 'ok'
        type: string
      query:
        description: Query of for the data
        type: string
      resp_version:
        description: Response version
        format: int64
        type: integer
      series:
        $ref: '#/definitions/BatchQueryRawResponseSeriesMediaV1'
      series_limit:
        description: Max of values
        format: int64
        type: integer
      sort:
        description: Sorting
        enum:
        - ASC
        - DESC
        type: string
      status:
        description: Status of the response
        type: string
      times:
        description: Timestamp in RFC3339
        items:
          format: date-time
          type: string
        type: array
      to_date:
        description: To date
        format: date-time
        type: string
      values:
        description: Values can be in Float, String, Bool, Object
        items: {}
        type: array
    required:
    - status
    - resp_version
    - series
    - query
    - from_date
    - to_date
    - sort
    - times
    - values
    - count_values
    title: 'Mediatype identifier: application/vnd.arduino.series.raw.response+json;
      view=default'
    type: object
  ArduinoSeriesResponse:
    description: ArduinoSeriesResponse media type (default view)
    properties:
      aggregation:
        description: |-
          Aggregation statistic function.
          For numeric values, AVG statistic is used by default. PCT_X compute the Xth approximate percentile (e.g. PCT_95 is the 95th approximate percentile).
          For boolean, BOOL_OR statistic is used as default.
        enum:
        - AVG
        - MIN
        - MAX
        - SUM
        - COUNT
        - PCT_99
        - PCT_95
        - PCT_90
        - PCT_75
        - PCT_50
        - PCT_15
        - PCT_5
        - BOOL_OR
        - BOOL_AND
        example: AVG
        type: string
      count_values:
        description: Total number of values in the array 'values'
        format: int64
        type: integer
      from_date:
        description: From date
        format: date-time
        type: string
      interval:
        description: Resolution in seconds
        format: int64
        type: integer
      message:
        default: ""
        description: If the response is different than 'ok'
        type: string
      query:
        description: Query of for the data
        type: string
      resp_version:
        description: Response version
        format: int64
        type: integer
      series_limit:
        description: Maximum number of values returned after data aggregation, if
          any
        format: int64
        type: integer
      status:
        description: Status of the response
        type: string
      times:
        description: Timestamp in RFC3339
        items:
          format: date-time
          type: string
        type: array
      to_date:
        description: To date
        format: date-time
        type: string
      values:
        description: Values in Float
        items:
          format: double
          type: number
        type: array
    required:
    - status
    - resp_version
    - query
    - from_date
    - to_date
    - interval
    - times
    - values
    - count_values
    title: 'Mediatype identifier: application/vnd.arduino.series.response+json; view=default'
    type: object
  ArduinoSupporteddevicev1:
    description: ArduinoSupporteddevicev1 media type (default view)
    properties:
      label:
        description: The descriptive label of the device
        example: Arduino MKR WiFi 1010
        type: string
      tags:
        description: The tags this device belongs to
        example:
        - lora
        items:
          type: string
        type: array
      type:
        description: The type that should be use in api requests
        example: mkrwifi1010
        type: string
      vendor:
        description: The vendor of the device
        example: ARDUINO
        type: string
    required:
    - type
    - label
    - tags
    - vendor
    title: 'Mediatype identifier: application/vnd.arduino.supporteddevicev1+json;
      view=default'
    type: object
  ArduinoSupporteddevicev1Collection:
    description: ArduinoSupporteddevicev1Collection is the media type for an array
      of ArduinoSupporteddevicev1 (default view)
    items:
      $ref: '#/definitions/ArduinoSupporteddevicev1'
    title: 'Mediatype identifier: application/vnd.arduino.supporteddevicev1+json;
      type=collection; view=default'
    type: array
  ArduinoSync:
    description: ArduinoSync media type (default view)
    properties:
      id:
        description: The id of the property
        format: uuid
        type: string
      organization_id:
        description: Id of the organization the sync belongs to
        format: uuid
        type: string
      properties:
        description: The properties in sync
        items:
          $ref: '#/definitions/ArduinoProperty'
        type: array
      type:
        description: The type of the property
        type: string
    required:
    - id
    - type
    - properties
    title: 'Mediatype identifier: application/vnd.arduino.sync+json; view=default'
    type: object
  ArduinoSyncCollection:
    description: ArduinoSyncCollection is the media type for an array of ArduinoSync
      (default view)
    items:
      $ref: '#/definitions/ArduinoSync'
    title: 'Mediatype identifier: application/vnd.arduino.sync+json; type=collection;
      view=default'
    type: array
  ArduinoTags:
    description: ArduinoTags media type (default view)
    properties:
      tags:
        items:
          $ref: '#/definitions/tag'
        type: array
    required:
    - tags
    title: 'Mediatype identifier: application/vnd.arduino.tags+json; view=default'
    type: object
  ArduinoTemplate:
    description: ArduinoTemplate media type (default view)
    properties:
      dashboards:
        items:
          format: uuid
          type: string
        type: array
      things:
        $ref: '#/definitions/ArduinoThingresultCollection'
    required:
    - things
    title: 'Mediatype identifier: application/vnd.arduino.template+json; view=default'
    type: object
  ArduinoTemplateproperty:
    description: ArduinoTemplateproperty media type (default view)
    properties:
      name:
        description: The friendly name of the property
        type: string
      permission:
        description: The permission of the property
        type: string
      type:
        description: The type of the property
        type: string
      update_parameter:
        description: The update frequency in seconds, or the amount of the property
          has to change in order to trigger an update
        format: double
        type: number
      update_strategy:
        description: The update strategy for the property value
        type: string
      variable_name:
        description: The sketch variable name of the property
        type: string
    required:
    - name
    - type
    - permission
    - update_strategy
    title: 'Mediatype identifier: application/vnd.arduino.templateproperty+json; view=default'
    type: object
  ArduinoTemplatepropertyCollection:
    description: ArduinoTemplatepropertyCollection is the media type for an array
      of ArduinoTemplateproperty (default view)
    items:
      $ref: '#/definitions/ArduinoTemplateproperty'
    title: 'Mediatype identifier: application/vnd.arduino.templateproperty+json; type=collection;
      view=default'
    type: array
  ArduinoTemplatevariable:
    description: ArduinoTemplatevariable media type (default view)
    properties:
      name:
        description: The name of the variable
        type: string
      permission:
        description: The permission of the linked variable
        type: string
      thing_id:
        description: The name of the related thing
        type: string
      thing_timezone:
        $ref: '#/definitions/ArduinoTimezone'
      type:
        description: The type of the variable
        type: string
      variable_id:
        description: The name of the variable in the code
        type: string
    required:
    - name
    - variable_id
    - thing_id
    - type
    - permission
    title: 'Mediatype identifier: application/vnd.arduino.templatevariable+json; view=default'
    type: object
  ArduinoTemplatevariableCollection:
    description: ArduinoTemplatevariableCollection is the media type for an array
      of ArduinoTemplatevariable (default view)
    items:
      $ref: '#/definitions/ArduinoTemplatevariable'
    title: 'Mediatype identifier: application/vnd.arduino.templatevariable+json; type=collection;
      view=default'
    type: array
  ArduinoThing:
    description: ArduinoThing media type (default view)
    properties:
      created_at:
        description: Creation date of the thing
        format: date-time
        type: string
      deleted_at:
        description: Delete date of the thing
        format: date-time
        type: string
      device_fqbn:
        description: The fqbn of the attached device, if any
        type: string
      device_id:
        description: The id of the device
        format: uuid
        type: string
      device_name:
        description: The name of the attached device, if any
        type: string
      device_type:
        description: The type of the attached device, if any
        type: string
      href:
        description: The api reference of this thing
        type: string
      id:
        description: The id of the thing
        format: uuid
        type: string
      name:
        description: The friendly name of the thing
        type: string
      organization_id:
        description: Id of the organization the thing belongs to
        format: uuid
        type: string
      properties:
        $ref: '#/definitions/ArduinoPropertyCollection'
      properties_count:
        description: The number of properties of the thing
        format: int64
        type: integer
      sketch_id:
        description: The id of the attached sketch
        format: uuid
        type: string
      tags:
        additionalProperties: true
        description: Tags of the thing
        type: object
      timezone:
        description: Time zone of the thing
        type: string
      updated_at:
        description: Update date of the thing
        format: date-time
        type: string
      user_id:
        description: The user id of the owner
        format: uuid
        type: string
      webhook_active:
        description: Webhook uri
        type: boolean
      webhook_uri:
        description: Webhook uri
        type: string
    required:
    - id
    - user_id
    - name
    - href
    - timezone
    title: 'Mediatype identifier: application/vnd.arduino.thing+json; view=default'
    type: object
  ArduinoThingCollection:
    description: ArduinoThingCollection is the media type for an array of ArduinoThing
      (default view)
    items:
      $ref: '#/definitions/ArduinoThing'
    title: 'Mediatype identifier: application/vnd.arduino.thing+json; type=collection;
      view=default'
    type: array
  ArduinoThinglayout:
    description: ArduinoThinglayout media type (default view)
    properties:
      created_at:
        description: Creation date of the thing
        format: date-time
        type: string
      deleted_at:
        description: Delete date of the thing
        format: date-time
        type: string
      device_fqbn:
        description: The fqbn of the device
        type: string
      device_id:
        description: The arn of the device
        format: uuid
        type: string
      device_type:
        description: The type of the device
        type: string
      href:
        description: The api reference of this thing
        type: string
      id:
        description: The id of the thing
        format: uuid
        type: string
      name:
        description: The friendly name of the thing
        type: string
      organization_id:
        description: Id of the organization the thing belongs to
        format: uuid
        type: string
      properties:
        $ref: '#/definitions/ArduinoPropertyCollection'
      properties_count:
        description: The number of properties of the thing
        format: double
        type: number
      shared_with:
        description: The list of users the dashboard is shared with
        items:
          format: uuid
          type: string
        type: array
      sketch_id:
        description: The id of the attached sketch
        format: uuid
        type: string
      tags:
        additionalProperties: true
        description: Tags of the thing
        type: object
      timezone:
        $ref: '#/definitions/ArduinoTimezone'
      updated_at:
        description: Update date of the thing
        format: date-time
        type: string
      user_id:
        description: The user id of the owner
        format: uuid
        type: string
      webhook_active:
        description: Webhook uri
        type: boolean
      webhook_uri:
        description: Webhook uri
        type: string
    required:
    - id
    - user_id
    - name
    - href
    - timezone
    title: 'Mediatype identifier: application/vnd.arduino.thinglayout+json; view=default'
    type: object
  ArduinoThingresult:
    description: ArduinoThingresult media type (default view)
    properties:
      device_id:
        description: UUID of the attached device
        format: uuid
        type: string
      id:
        description: UUID of the created Thing
        format: uuid
        type: string
      sketch_id:
        description: UUID of the created Sketch
        format: uuid
        type: string
    required:
    - id
    - sketch_id
    title: 'Mediatype identifier: application/vnd.arduino.thingresult+json; view=default'
    type: object
  ArduinoThingresultCollection:
    description: ArduinoThingresultCollection is the media type for an array of ArduinoThingresult
      (default view)
    items:
      $ref: '#/definitions/ArduinoThingresult'
    title: 'Mediatype identifier: application/vnd.arduino.thingresult+json; type=collection;
      view=default'
    type: array
  ArduinoThingtemplate:
    description: ArduinoThingtemplate media type (default view)
    properties:
      name:
        description: The friendly name of the thing
        type: string
      organization_id:
        description: Id of the organization the thing belongs to
        format: uuid
        type: string
      properties:
        $ref: '#/definitions/ArduinoTemplatepropertyCollection'
      tags:
        description: Tags of the thing
        items:
          $ref: '#/definitions/tag'
        type: array
      timezone:
        description: Time zone of the thing
        type: string
      webhook_uri:
        description: Webhook uri
        type: string
    required:
    - name
    - timezone
    title: 'Mediatype identifier: application/vnd.arduino.thingtemplate+json; view=default'
    type: object
  ArduinoTimeseriesmedia:
    description: ArduinoTimeseriesmedia media type (default view)
    properties:
      data:
        items:
          $ref: '#/definitions/TimeseriesDataPoint'
        type: array
    required:
    - data
    title: 'Mediatype identifier: application/vnd.arduino.timeseriesmedia+json; view=default'
    type: object
  ArduinoTimezone:
    description: ArduinoTimezone media type (default view)
    properties:
      name:
        description: Name of the time zone.
        type: string
      offset:
        description: Current UTC DST offset in seconds.
        format: int64
        type: integer
      until:
        description: Date until the offset is valid.
        format: date-time
        type: string
    required:
    - name
    - offset
    - until
    title: 'Mediatype identifier: application/vnd.arduino.timezone+json; view=default'
    type: object
  ArduinoTimezoneCollection:
    description: ArduinoTimezoneCollection is the media type for an array of ArduinoTimezone
      (default view)
    items:
      $ref: '#/definitions/ArduinoTimezone'
    title: 'Mediatype identifier: application/vnd.arduino.timezone+json; type=collection;
      view=default'
    type: array
  ArduinoTimezones:
    description: ArduinoTimezones media type (default view)
    properties:
      timezones:
        $ref: '#/definitions/ArduinoTimezoneCollection'
    required:
    - timezones
    title: 'Mediatype identifier: application/vnd.arduino.timezones+json; view=default'
    type: object
  ArduinoToken:
    description: ArduinoToken media type (default view)
    properties:
      access_token:
        description: The access_token
        type: string
      expires_in:
        description: The number of seconds the token will be valid
        format: int64
        type: integer
      token_type:
        description: The Type of token
        type: string
    required:
    - access_token
    - token_type
    - expires_in
    title: 'Mediatype identifier: application/vnd.arduino.token+json; view=default'
    type: object
  ArduinoTrigger:
    description: ArduinoTrigger media type (default view)
    properties:
      actions:
        description: A list of actions associated with the trigger
        items:
          $ref: '#/definitions/ArduinoAction'
        type: array
      active:
        description: Is true if the trigger is enabled
        type: boolean
      created_by:
        description: Id of the user who last updated the trigger
        format: uuid
        type: string
      description:
        description: The description of the trigger
        type: string
      id:
        description: The id of the trigger
        format: uuid
        type: string
      name:
        description: The name of the trigger
        type: string
      organization_id:
        description: Id of the organization the trigger belongs to
        format: uuid
        type: string
      property_id:
        description: Id of the property the trigger is associated to
        format: uuid
        type: string
    required:
    - name
    title: 'Mediatype identifier: application/vnd.arduino.trigger+json; view=default'
    type: object
  ArduinoTrigger_with_property:
    description: ArduinoTrigger_with_property media type (default view)
    properties:
      actions:
        description: A list of actions associated with the trigger
        items:
          $ref: '#/definitions/ArduinoAction'
        type: array
      active:
        description: Is true if the trigger is enabled
        type: boolean
      created_by:
        description: Id of the user who last updated the trigger
        format: uuid
        type: string
      description:
        description: The description of the trigger
        type: string
      id:
        description: The id of the trigger
        format: uuid
        type: string
      linked_property:
        $ref: '#/definitions/ArduinoLinked_property'
      name:
        description: The name of the trigger
        type: string
      organization_id:
        description: Id of the organization the trigger belongs to
        format: uuid
        type: string
    required:
    - id
    - name
    title: 'Mediatype identifier: application/vnd.arduino.trigger_with_property+json;
      view=default'
    type: object
  ArduinoTriggerCollection:
    description: ArduinoTriggerCollection is the media type for an array of ArduinoTrigger
      (default view)
    items:
      $ref: '#/definitions/ArduinoTrigger'
    title: 'Mediatype identifier: application/vnd.arduino.trigger+json; type=collection;
      view=default'
    type: array
  ArduinoUser:
    description: ArduinoUser media type (default view)
    properties:
      id:
        description: The ID of the user
        format: uuid
        type: string
      username:
        description: The username of the user
        type: string
    required:
    - id
    - username
    title: 'Mediatype identifier: application/vnd.arduino.user+json; view=default'
    type: object
  ArduinoVariableslinks:
    description: ArduinoVariableslinks media type (default view)
    properties:
      variables:
        description: The ids of the linked variables
        items:
          format: uuid
          type: string
        type: array
    required:
    - variables
    title: 'Mediatype identifier: application/vnd.arduino.variableslinks+json; view=default'
    type: object
  ArduinoWidgetv2:
    description: ArduinoWidgetv2 media type (default view)
    properties:
      has_permission_incompatibility:
        description: True if the linked variables permissions are incompatible with
          the widget
        type: boolean
      has_type_incompatibility:
        description: True if the linked variables types are incompatible with the
          widget
        type: boolean
      has_unlinked_variable:
        description: If it's true the widget is linked to a soft-deleted variable
        type: boolean
      height:
        description: Widget current height for desktop
        format: int64
        type: integer
      height_mobile:
        description: Widget current height for mobile
        format: int64
        type: integer
      id:
        description: The UUID of the widget, set by client
        format: uuid
        type: string
      name:
        description: The name of the widget
        type: string
      options:
        additionalProperties: true
        description: Widget options
        type: object
      type:
        description: The type of the widget
        enum:
        - slider, gauge
        type: string
      variables:
        $ref: '#/definitions/ArduinoLinkedvariableCollection'
      width:
        description: Widget current width for desktop
        format: int64
        type: integer
      width_mobile:
        description: Widget current width for mobile
        format: int64
        type: integer
      x:
        description: Widget x position for desktop
        format: int64
        type: integer
      x_mobile:
        description: Widget x position for mobile
        format: int64
        type: integer
      "y":
        description: Widget y position for desktop
        format: int64
        type: integer
      y_mobile:
        description: Widget y position for mobile
        format: int64
        type: integer
    required:
    - id
    - type
    - width
    - height
    - x
    - "y"
    - options
    title: 'Mediatype identifier: application/vnd.arduino.widgetv2+json; view=default'
    type: object
  ArduinoWidgetv2Collection:
    description: ArduinoWidgetv2Collection is the media type for an array of ArduinoWidgetv2
      (default view)
    items:
      $ref: '#/definitions/ArduinoWidgetv2'
    title: 'Mediatype identifier: application/vnd.arduino.widgetv2+json; type=collection;
      view=default'
    type: array
  ArduinoWidgetv2template:
    description: ArduinoWidgetv2template media type (default view)
    properties:
      height:
        description: Widget current height for desktop
        format: int64
        type: integer
      height_mobile:
        description: Widget current height for mobile
        format: int64
        type: integer
      name:
        description: The name of the widget
        type: string
      options:
        additionalProperties: true
        description: Widget options
        type: object
      type:
        description: The type of the widget
        type: string
      variables:
        $ref: '#/definitions/ArduinoTemplatevariableCollection'
      width:
        description: Widget current width for desktop
        format: int64
        type: integer
      width_mobile:
        description: Widget current width for mobile
        format: int64
        type: integer
      x:
        description: Widget x position for desktop
        format: int64
        type: integer
      x_mobile:
        description: Widget x position for mobile
        format: int64
        type: integer
      "y":
        description: Widget y position for desktop
        format: int64
        type: integer
      y_mobile:
        description: Widget y position for mobile
        format: int64
        type: integer
    required:
    - type
    - width
    - height
    - x
    - "y"
    - options
    title: 'Mediatype identifier: application/vnd.arduino.widgetv2template+json; view=default'
    type: object
  ArduinoWidgetv2templateCollection:
    description: ArduinoWidgetv2templateCollection is the media type for an array
      of ArduinoWidgetv2template (default view)
    items:
      $ref: '#/definitions/ArduinoWidgetv2template'
    title: 'Mediatype identifier: application/vnd.arduino.widgetv2template+json; type=collection;
      view=default'
    type: array
  BatchLastValueRequestsMediaV1:
    properties:
      requests:
        description: Requests
        items:
          $ref: '#/definitions/BatchQueryRawLastValueRequestMediaV1'
        type: array
    required:
    - requests
    title: BatchLastValueRequestsMediaV1
    type: object
  BatchQueryRawLastValueRequestMediaV1:
    properties:
      property_id:
        description: Property id
        format: uuid
        type: string
      thing_id:
        description: Thing id
        format: uuid
        type: string
    required:
    - thing_id
    - property_id
    title: BatchQueryRawLastValueRequestMediaV1
    type: object
  BatchQueryRawRequestMediaV1:
    properties:
      from:
        description: From timestamp
        format: date-time
        type: string
      q:
        description: Data selection query (e.g. property.2a99729d-2556-4220-a139-023348a1e6b5)
        type: string
      series_limit:
        description: Max of values
        format: int64
        type: integer
      sort:
        default: DESC
        description: Sorting
        enum:
        - ASC
        - DESC
        type: string
      to:
        description: To timestamp
        format: date-time
        type: string
    required:
    - q
    title: BatchQueryRawRequestMediaV1
    type: object
  BatchQueryRawRequestsMediaV1:
    properties:
      requests:
        description: Requests
        items:
          $ref: '#/definitions/BatchQueryRawRequestMediaV1'
        type: array
      resp_version:
        description: Response version
        format: int64
        type: integer
    required:
    - requests
    - resp_version
    title: BatchQueryRawRequestsMediaV1
    type: object
  BatchQueryRawResponseSeriesMediaV1:
    properties:
      metric:
        description: Metric name
        type: string
    required:
    - metric
    title: BatchQueryRawResponseSeriesMediaV1
    type: object
  BatchQueryRequestMediaV1:
    properties:
      aggregation:
        description: |-
          Aggregation statistic function.
          For numeric values, AVG statistic is used by default. PCT_X compute the Xth approximate percentile (e.g. PCT_95 is the 95th approximate percentile).
          For boolean, BOOL_OR statistic is used as default.
        enum:
        - AVG
        - MIN
        - MAX
        - SUM
        - COUNT
        - PCT_99
        - PCT_95
        - PCT_90
        - PCT_75
        - PCT_50
        - PCT_15
        - PCT_5
        - BOOL_OR
        - BOOL_AND
        example: AVG
        type: string
      from:
        description: From timestamp
        format: date-time
        type: string
      interval:
        description: 'Resolution in seconds (max allowed: 86400)'
        format: int64
        type: integer
      q:
        description: Data selection query (e.g. property.2a99729d-2556-4220-a139-023348a1e6b5)
        type: string
      series_limit:
        description: 'Maximum number of values returned after data aggregation, if
          any (default: 300, limit: 1000)'
        format: int64
        type: integer
      to:
        description: To timestamp
        format: date-time
        type: string
    required:
    - q
    - from
    - to
    title: BatchQueryRequestMediaV1
    type: object
  BatchQueryRequestsMediaV1:
    properties:
      requests:
        description: Requests
        items:
          $ref: '#/definitions/BatchQueryRequestMediaV1'
        type: array
      resp_version:
        description: Response version
        format: int64
        type: integer
    required:
    - requests
    - resp_version
    title: BatchQueryRequestsMediaV1
    type: object
  CheckDevicesV2PassPayload:
    properties:
      password:
        description: The password for the device
        type: string
    required:
    - password
    title: CheckDevicesV2PassPayload
    type: object
  ClaimLoraGwV1Payload:
    properties:
      user_id:
        description: The user id. Could be a uuid, or the string 'me'
        type: string
    required:
    - user_id
    title: ClaimLoraGwV1Payload
    type: object
  CreateDevicesV2CertsPayload:
    properties:
      ca:
        description: The Certification Authority you want to use
        type: string
      csr:
        description: The certificate request in pem format
        example: "-----BEGIN CERTIFICATE-----\n\t\t\tMIIBeDCCAR4CAQAwgY0xCzAJBgNVBAYTAkFVMRMwEQYDVQQIEwpTb21lLVN0YXRl\n\t\t\tMQ8wDQYDVQQHEwZNeUNpdHkxFDASBgNVBAoTC0NvbXBhbnkgTHRkMQswCQYDVQQL\n\t\t\tEwJJVDEUMBIGA1UEAxMLZXhhbXBsZS5jb20xHzAdBgkqhkiG9w0BCQEMEHRlc3RA\n\t\t\tZXhhbXBsZS5jb20wWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATf6J9Gk79XGJ2I\n\t\t\t+v6p/r0UmPufUcUwtlx7gx87+DaI8Vpj9R5KN71HsHYw5uq+Lm0cr0CZIdtZU4cP\n\t\t\tupd6jDQToC4wLAYJKoZIhvcNAQkOMR8wHTAbBgNVHREEFDASgRB0ZXN0QGV4YW1w\n\t\t\tbGUuY29tMAoGCCqGSM49BAMCA0gAMEUCIGQqtlGzYdjPwYZYJ41albMBcdrKI7+8\n\t\t\toiNSNWyDxJSGAiEAqQPPxMdr6vaXCCjr5s1J01WLKHzGoPFCR40rqAPs8eQ=\n\t\t\t-----END
          CERTIFICATE-----\n\t\t\t"
        maxLength: 1024
        type: string
      enabled:
        description: Whether the certificate is enabled
        type: boolean
    required:
    - enabled
    - csr
    title: CreateDevicesV2CertsPayload
    type: object
  CreateDevicesV2Payload:
    description: DeviceV2 describes a device.
    properties:
      connection_type:
        description: The type of the connections selected by the user when multiple
          connections are available
        enum:
        - wifi
        - eth
        - wifiandsecret
        - gsm
        - nb
        - lora
        type: string
      fqbn:
        description: The fully qualified board name
        type: string
      name:
        description: The friendly name of the device
        maxLength: 64
        pattern: '[a-zA-Z0-9_.@-]+'
        type: string
      serial:
        description: The serial uuid of the device
        maxLength: 64
        pattern: '[a-zA-Z0-9_.@-]+'
        type: string
      type:
        description: The type of the device
        enum:
        - mkrwifi1010
        - mkr1000
        - nano_33_iot
        - mkrgsm1400
        - mkrwan1310
        - mkrwan1300
        - mkrnb1500
        - lora-device
        - login_and_secretkey_wifi
        - envie_m7
        - nanorp2040connect
        - nicla_vision
        - phone
        - portenta_x8
        - opta
        - giga
        - generic_device_secretkey
        - portenta_c33
        - unor4wifi
        - nano_nora
        type: string
      user_id:
        description: The user_id associated to the device. If absent it will be inferred
          from the authentication header
        format: uuid
        type: string
      wifi_fw_version:
        description: The version of the NINA/WIFI101 firmware running on the device
        maxLength: 10
        pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
        type: string
    required:
    - type
    title: CreateDevicesV2Payload
    type: object
  CreateDevicesV2PubkeysPayload:
    properties:
      enabled:
        description: Whether the public key is enabled
        type: boolean
      expire:
        description: When the public key will expire
        format: date-time
        type: string
      pem:
        description: The public key in pem format
        type: string
    required:
    - enabled
    - expire
    - pem
    title: CreateDevicesV2PubkeysPayload
    type: object
  CreateLoraAppV1Payload:
    properties:
      app_eui:
        default: ""
        description: The eui of the app
        type: string
      name:
        description: The name of the app
        type: string
    required:
    - name
    title: CreateLoraAppV1Payload
    type: object
  CreateLoraDevicesV1Payload:
    properties:
      app:
        description: The app name
        type: string
      app_eui:
        description: The app eui of the lora device
        pattern: '[0-9a-z]{16}'
        type: string
      app_key:
        description: The app key of the lora device
        pattern: '[0-9a-z]{16}'
        type: string
      eui:
        description: The eui of the lora device
        pattern: '[0-9a-z]{16}'
        type: string
      frequency_plan:
        description: 'The frequency plan required by your country '
        enum:
        - EU_863_870_TTN
        - US_902_928_FSB_2
        - EU_433
        - AU_915_928_FSB_2
        - CN_470_510_FSB_11
        - AS_920_923
        - AS_920_923_TTN_AU
        - AS_923_925
        - AS_923_925_TTN_AU
        - KR_920_923_TTN
        - IN_865_867
        type: string
      name:
        description: A common name for the device
        type: string
      serial:
        description: The optional serial number
        type: string
      type:
        description: The type of device
        enum:
        - lora-device
        - mkrwan1300
        - mkrwan1310
        type: string
      user_id:
        description: The id of the user. Can be the special string 'me'
        type: string
    required:
    - name
    - eui
    - frequency_plan
    - user_id
    - app
    - type
    title: CreateLoraDevicesV1Payload
    type: object
  CreateLoraGwV1Payload:
    properties:
      id:
        description: The id of the lora gateway. It's calculated from the mac using
          magic
        example: "71619230301"
        type: string
      mac:
        description: The mac/serial_number/device_code of the lora gateway. It is
          printed on the box, and used to connect to tts.
        type: string
      pub:
        description: The public key of the lora gateway
        example: |-
          -----BEGIN PUBLIC KEY-----
          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAryQICCl6NZ5gDKrnSztO
          3Hy8PEUcuyvg/ikC+VcIo2SFFSf18a3IMYldIugqqqZCs4/4uVW3sbdLs/6PfgdX
          7O9D22ZiFWHPYA2k2N744MNiCD1UE+tJyllUhSblK48bn+v1oZHCM0nYQ2NqUkvS
          j+hwUU3RiWl7x3D2s9wSdNt7XUtW05a/FXehsPSiJfKvHJJnGOX0BgTvkLnkAOTd
          OrUZ/wK69Dzu4IvrN4vs9Nes8vbwPa/ddZEzGR0cQMt0JBkhk9kU/qwqUseP1QRJ
          5I1jR4g8aYPL/ke9K35PxZWuDp3U0UPAZ3PjFAh+5T+fc7gzCs9dPzSHloruU+gl
          FQIDAQAB
          -----END PUBLIC KEY-----
        type: string
    required:
    - id
    - pub
    - mac
    title: CreateLoraGwV1Payload
    type: object
  DeleteLoraAppV1Payload:
    properties:
      app_eui:
        default: ""
        description: The eui of the app
        type: string
      name:
        description: The name of the app
        type: string
    required:
    - name
    title: DeleteLoraAppV1Payload
    type: object
  HistoricDataRequest:
    properties:
      from:
        description: Get data starting from this date
        format: date-time
        type: string
      properties:
        description: IDs of properties
        items:
          format: uuid
          type: string
        minItems: 1
        type: array
      to:
        description: Get data up to this date
        format: date-time
        type: string
    required:
    - properties
    - from
    - to
    title: HistoricDataRequest
    type: object
  ImageDevicesV1Payload:
    items:
      $ref: '#/definitions/configv1'
    title: ImageDevicesV1Payload
    type: array
  ImageDevicesV2Payload:
    items:
      $ref: '#/definitions/configv2'
    title: ImageDevicesV2Payload
    type: array
  SetDevicesV2MetadataPayload:
    additionalProperties: true
    title: SetDevicesV2MetadataPayload
    type: object
  ThingClone:
    description: Payload to clone a new thing from an existing one
    properties:
      include_tags:
        description: Include tags in clone procedure
        type: boolean
      name:
        description: The friendly name of the thing
        maxLength: 64
        pattern: ^[a-zA-Z0-9_.@ -]+$
        type: string
    required:
    - name
    title: ThingClone
    type: object
  ThingCreate:
    description: Payload to create a new thing
    properties:
      device_id:
        description: The arn of the associated device
        format: uuid
        type: string
      id:
        description: The id of the thing
        format: uuid
        type: string
      name:
        description: The friendly name of the thing
        maxLength: 64
        pattern: ^[a-zA-Z0-9_.@ -]+$
        type: string
      properties:
        description: The properties of the thing
        items:
          $ref: '#/definitions/property'
        type: array
      tags:
        description: Optional set of tags
        items:
          $ref: '#/definitions/tag'
        type: array
      timezone:
        default: America/New_York
        description: |-
          A time zone name
          Check /v2/timezones for a list of valid names.
        type: string
      webhook_active:
        description: Webhook uri
        type: boolean
      webhook_uri:
        description: Webhook uri
        type: string
    title: ThingCreate
    type: object
  TimeseriesDataPoint:
    properties:
      time:
        description: Binning timestamp
        format: date-time
        type: string
      value:
        description: Avg value on the binning interval
        format: double
        type: number
    required:
    - time
    - value
    title: TimeseriesDataPoint
    type: object
  UpdateLoraAppV1Payload:
    properties:
      app_eui:
        default: ""
        description: The eui of the app
        type: string
      name:
        description: The name of the app
        type: string
    required:
    - name
    title: UpdateLoraAppV1Payload
    type: object
  UpdateLoraAppsV1Payload:
    properties:
      apps:
        items:
          type: string
        type: array
    title: UpdateLoraAppsV1Payload
    type: object
  body_expression:
    properties:
      expression:
        description: Content of the body of a message, variables are allowed
        maxLength: 1000
        type: string
      variables:
        description: Variables used by the expression
        items:
          $ref: '#/definitions/variable'
        type: array
    required:
    - expression
    title: body_expression
    type: object
  client:
    description: ClientPayload describes an oauth client
    properties:
      name:
        description: The name of the client
        maxLength: 64
        pattern: ^[a-zA-Z0-9_.@-]+$
        type: string
    required:
    - name
    title: client
    type: object
  clone:
    properties:
      overrides:
        description: 'The overrides to apply to the cloned dashboard. An override
          is a tuple of ids: the id of the thing to override and the id of the new
          thing to link'
        items:
          $ref: '#/definitions/override'
        type: array
    title: clone
    type: object
  configv1:
    description: ConfigPayload describe a tuple name:value
    properties:
      name:
        description: The name of the configuration
        type: string
      value:
        description: The name of the configuration
        type: string
    title: configv1
    type: object
  configv2:
    description: ConfigPayload describe a tuple name:value
    properties:
      name:
        description: The name of the configuration
        type: string
      value:
        description: The name of the configuration
        type: string
    title: configv2
    type: object
  create-action:
    properties:
      description:
        description: The description of the trigger
        type: string
      email:
        $ref: '#/definitions/email_action'
      kind:
        description: The kind of the action
        enum:
        - NOTIFY-EMAIL
        - NOTIFY-PUSH
        example: NOTIFY-EMAIL
        type: string
      name:
        description: The name of the action
        type: string
      organization_id:
        description: Id of the organization the trigger belongs to
        format: uuid
        type: string
      push_notification:
        $ref: '#/definitions/push_action'
      trigger_id:
        description: Id of the trigger the action is associated to
        format: uuid
        type: string
    required:
    - kind
    - name
    title: create-action
    type: object
  dashboardshare:
    properties:
      user_id:
        description: The userID of the user you want to share the dashboard with
        format: uuid
        type: string
      username:
        description: The username of the user you want to share the dashboard with
        type: string
    title: dashboardshare
    type: object
  dashboardv2:
    description: DashboardV2Payload describes a dashboard
    properties:
      name:
        description: The friendly name of the dashboard
        maxLength: 64
        pattern: '[a-zA-Z0-9_.@-]+'
        type: string
      widgets:
        description: Widgets attached to this dashboard
        items:
          $ref: '#/definitions/widget'
        type: array
    title: dashboardv2
    type: object
  devicev1:
    description: DevicePayload describes a device. No field is mandatory
    properties:
      csr:
        description: A certificate signing request
        example: |
          -----BEGIN CERTIFICATE REQUEST-----
          MIIBFzCBvgIBADBcMQswCQYDVQQGEwJJVDEOMAwGA1UEBwwFTWlsYW4xEDAOBgNV
          BAoMB0FyZHVpbm8xEDAOBgNVBAsMB1Rlc3RpbmcxGTAXBgNVBAMMEGNsb3VkLmFy
          ZHVpbm8uY2MwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQRtaM47EevUJ/cqrlA
          OWfLUQMWGRoIAuVmNlLjo1vIUx9lxRfcnj7nmOpVKF6bLOGrB0EpMUeCOm+TCtaj
          otQnoAAwCgYIKoZIzj1EAwIDSAAwRQIhAMhZbDKR4sIISlp4KQLUJKNSf/JW8q6h
          RMqsRHw16EaBAiApy8e92wxFffKlcUSJinkOwq3WSlWOganLuOfyXuG8Fw==
          -----END CERTIFICATE REQUEST-----
        type: string
      name:
        description: The friendly name of the device
        maxLength: 64
        pattern: '[a-zA-Z0-9_.@-]+'
        type: string
      serial:
        description: The serial uuid of the device
        maxLength: 64
        pattern: '[a-zA-Z0-9_.@-]+'
        type: string
      temp:
        default: true
        description: If temp is true, if the name won't be set after 1 hour it will
          be deleted
        type: boolean
      type:
        description: The type of the device
        maxLength: 64
        pattern: '[a-zA-Z0-9_.@-]+'
        type: string
    title: devicev1
    type: object
  devicev2:
    description: DeviceV2 describes a device.
    properties:
      connection_type:
        description: The type of the connections selected by the user when multiple
          connections are available
        enum:
        - wifi
        - eth
        - wifiandsecret
        - gsm
        - nb
        - lora
        type: string
      fqbn:
        description: The fully qualified board name
        type: string
      name:
        description: The friendly name of the device
        maxLength: 64
        pattern: '[a-zA-Z0-9_.@-]+'
        type: string
      serial:
        description: The serial uuid of the device
        maxLength: 64
        pattern: '[a-zA-Z0-9_.@-]+'
        type: string
      type:
        description: The type of the device
        enum:
        - mkrwifi1010
        - mkr1000
        - nano_33_iot
        - mkrgsm1400
        - mkrwan1310
        - mkrwan1300
        - mkrnb1500
        - lora-device
        - login_and_secretkey_wifi
        - envie_m7
        - nanorp2040connect
        - nicla_vision
        - phone
        - portenta_x8
        - opta
        - giga
        - generic_device_secretkey
        - portenta_c33
        - unor4wifi
        - nano_nora
        type: string
      user_id:
        description: The user_id associated to the device. If absent it will be inferred
          from the authentication header
        format: uuid
        type: string
      wifi_fw_version:
        description: The version of the NINA/WIFI101 firmware running on the device
        maxLength: 10
        pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
        type: string
    title: devicev2
    type: object
  devicev2.cert:
    properties:
      ca:
        description: The Certification Authority you want to use
        type: string
      csr:
        description: The certificate request in pem format
        example: "-----BEGIN CERTIFICATE-----\n\t\t\tMIIBeDCCAR4CAQAwgY0xCzAJBgNVBAYTAkFVMRMwEQYDVQQIEwpTb21lLVN0YXRl\n\t\t\tMQ8wDQYDVQQHEwZNeUNpdHkxFDASBgNVBAoTC0NvbXBhbnkgTHRkMQswCQYDVQQL\n\t\t\tEwJJVDEUMBIGA1UEAxMLZXhhbXBsZS5jb20xHzAdBgkqhkiG9w0BCQEMEHRlc3RA\n\t\t\tZXhhbXBsZS5jb20wWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATf6J9Gk79XGJ2I\n\t\t\t+v6p/r0UmPufUcUwtlx7gx87+DaI8Vpj9R5KN71HsHYw5uq+Lm0cr0CZIdtZU4cP\n\t\t\tupd6jDQToC4wLAYJKoZIhvcNAQkOMR8wHTAbBgNVHREEFDASgRB0ZXN0QGV4YW1w\n\t\t\tbGUuY29tMAoGCCqGSM49BAMCA0gAMEUCIGQqtlGzYdjPwYZYJ41albMBcdrKI7+8\n\t\t\toiNSNWyDxJSGAiEAqQPPxMdr6vaXCCjr5s1J01WLKHzGoPFCR40rqAPs8eQ=\n\t\t\t-----END
          CERTIFICATE-----\n\t\t\t"
        maxLength: 1024
        type: string
      enabled:
        description: Whether the certificate is enabled
        type: boolean
    title: devicev2.cert
    type: object
  devicev2.otabinaryurl:
    properties:
      async:
        default: true
        description: If false, wait for the full OTA process, until it gets a result
          from the device
        type: boolean
      binary_key:
        description: The object key of the binary
        pattern: ^ota/[a-zA-Z0-9_-]+/[a-zA-Z0-9_-]+.ota$
        type: string
      expire_in_mins:
        default: 10
        description: Binary expire time in minutes, default 10 mins
        format: int64
        type: integer
    required:
    - binary_key
    title: devicev2.otabinaryurl
    type: object
  devicev2.pass:
    properties:
      password:
        description: The password for the device
        type: string
    title: devicev2.pass
    type: object
  devicev2.pubkey:
    properties:
      enabled:
        description: Whether the public key is enabled
        type: boolean
      expire:
        description: When the public key will expire
        format: date-time
        type: string
      pem:
        description: The public key in pem format
        type: string
    title: devicev2.pubkey
    type: object
  devicev2.webhook:
    properties:
      active:
        default: true
        description: Whether the webhook is active
        type: boolean
      uri:
        description: The uri of the webhook
        format: uri
        type: string
    required:
    - uri
    title: devicev2.webhook
    type: object
  email_action:
    properties:
      body:
        $ref: '#/definitions/body_expression'
      delivery:
        $ref: '#/definitions/email_delivery_opts'
      subject:
        $ref: '#/definitions/title_expression'
    required:
    - delivery
    - subject
    - body
    title: email_action
    type: object
  email_delivery_opts:
    properties:
      bcc:
        description: The "bcc:" field of an e-mail
        items:
          $ref: '#/definitions/user_recipient'
        type: array
      cc:
        description: The "cc:" field of an e-mail
        items:
          $ref: '#/definitions/user_recipient'
        type: array
      to:
        description: The "to:" field of an e-mail
        items:
          $ref: '#/definitions/user_recipient'
        minItems: 1
        type: array
    required:
    - to
    title: email_delivery_opts
    type: object
  enableclient:
    properties:
      enabled:
        description: Enable or disable a client
        type: boolean
    required:
    - enabled
    title: enableclient
    type: object
  error:
    description: Error response media type (default view)
    properties:
      code:
        description: an application-specific error code, expressed as a string value.
        example: invalid_value
        type: string
      detail:
        description: a human-readable explanation specific to this occurrence of the
          problem.
        example: Value of ID must be an integer
        type: string
      id:
        description: a unique identifier for this particular occurrence of the problem.
        example: 3F1FKVRR
        type: string
      meta:
        additionalProperties: true
        description: a meta object containing non-standard meta-information about
          the error.
        example:
          timestamp: 1458609066
        type: object
      status:
        description: the HTTP status code applicable to this problem, expressed as
          a string value.
        example: "400"
        type: string
    title: 'Mediatype identifier: application/vnd.goa.error+json; view=default'
    type: object
  override:
    properties:
      new_thing_id:
        description: The id of the new thing to link
        format: uuid
        type: string
      old_thing_id:
        description: The id of the thing to override
        format: uuid
        type: string
    required:
    - old_thing_id
    - new_thing_id
    title: override
    type: object
  propertiesValue:
    properties:
      name:
        description: The name of the property
        type: string
      type:
        default: infer
        description: The type of the property
        enum:
        - infer
        - base64
        - hex
        - json
        type: string
      value:
        description: The last value of the property
    required:
    - name
    - value
    - type
    title: propertiesValue
    type: object
  propertiesValues:
    properties:
      input:
        default: false
        description: If true, send property values to device's input topic.
        type: boolean
      properties:
        items:
          $ref: '#/definitions/propertiesValue'
        type: array
    required:
    - properties
    title: propertiesValues
    type: object
  property:
    description: PropertyPayload describes a property of a thing. No field is mandatory
    properties:
      max_value:
        description: Maximum value of this property
        format: double
        type: number
      min_value:
        description: Minimum value of this property
        format: double
        type: number
      name:
        description: The friendly name of the property
        type: string
      permission:
        description: The permission of the property
        enum:
        - READ_ONLY
        - READ_WRITE
        type: string
      persist:
        default: true
        description: If true, data will persist into a timeseries database
        type: boolean
      tag:
        description: The integer id of the property
        format: int64
        type: integer
      type:
        description: The type of the property
        enum:
        - ANALOG
        - CHARSTRING
        - FLOAT
        - INT
        - LENGHT_C
        - LENGHT_I
        - LENGHT_M
        - PERCENTAGE
        - STATUS
        - TEMPERATURE_C
        - TEMPERATURE_F
        - METER
        - KILOGRAM
        - GRAM
        - SECOND
        - AMPERE
        - KELVIN
        - CANDELA
        - MOLE
        - HERTZ
        - RADIAN
        - STERADIAN
        - NEWTON
        - PASCAL
        - JOULE
        - WATT
        - COULOMB
        - VOLT
        - FARAD
        - OHM
        - SIEMENS
        - WEBER
        - TESLA
        - HENRY
        - DEGREES_CELSIUS
        - LUMEN
        - LUX
        - BECQUEREL
        - GRAY
        - SIEVERT
        - KATAL
        - SQUARE_METER
        - CUBIC_METER
        - LITER
        - METER_PER_SECOND
        - METER_PER_SQUARE_SECOND
        - CUBIC_METER_PER_SECOND
        - LITER_PER_SECOND
        - WATT_PER_SQUARE_METER
        - CANDELA_PER_SQUARE_METER
        - BIT
        - BIT_PER_SECOND
        - DEGREES_LATITUDE
        - DEGREES_LONGITUDE
        - PH_VALUE
        - DECIBEL
        - DECIBEL_1W
        - BEL
        - COUNT
        - RATIO_DIV
        - RATIO_MOD
        - PERCENTAGE_RELATIVE_HUMIDITY
        - PERCENTAGE_BATTERY_LEVEL
        - SECONDS_BATTERY_LEVEL
        - EVENT_RATE_SECOND
        - EVENT_RATE_MINUTE
        - HEART_RATE
        - HEART_BEATS
        - SIEMENS_PER_METER
        - LOCATION
        - COLOR_HSB
        - COLOR_RGB
        - GENERIC_COMPLEX_PROPERTY
        - HOME_COLORED_LIGHT
        - HOME_DIMMED_LIGHT
        - HOME_LIGHT
        - HOME_CONTACT_SENSOR
        - HOME_MOTION_SENSOR
        - HOME_SMART_PLUG
        - HOME_TEMPERATURE
        - HOME_TEMPERATURE_C
        - HOME_TEMPERATURE_F
        - HOME_SWITCH
        - HOME_TELEVISION
        - GOOGLE_HOME_COLORED_LIGHT
        - GOOGLE_HOME_DIMMED_LIGHT
        - GOOGLE_HOME_LIGHT
        - GOOGLE_HOME_CONTACT_SENSOR
        - GOOGLE_HOME_MOTION_SENSOR
        - GOOGLE_HOME_SMART_PLUG
        - GOOGLE_HOME_TEMPERATURE
        - GOOGLE_HOME_TEMPERATURE_C
        - GOOGLE_HOME_TEMPERATURE_F
        - GOOGLE_HOME_SWITCH
        - SMART_HOME_COLORED_LIGHT
        - SMART_HOME_DIMMED_LIGHT
        - SMART_HOME_LIGHT
        - SMART_HOME_CONTACT_SENSOR
        - SMART_HOME_MOTION_SENSOR
        - SMART_HOME_SMART_PLUG
        - SMART_HOME_TEMPERATURE
        - SMART_HOME_TEMPERATURE_C
        - SMART_HOME_TEMPERATURE_F
        - SMART_HOME_SWITCH
        - SMART_HOME_TELEVISION
        - ENERGY
        - FORCE
        - TEMPERATURE
        - POWER
        - ELECTRIC_CURRENT
        - ELECTRIC_POTENTIAL
        - ELECTRICAL_RESISTANCE
        - CAPACITANCE
        - TIME
        - FREQUENCY
        - DATA_RATE
        - ACCELERATION
        - AREA
        - LENGTH
        - VELOCITY
        - MASS
        - VOLUME
        - FLOW_RATE
        - ANGLE
        - ILLUMINANCE
        - LUMINOUS_FLUX
        - LUMINANCE
        - LUMINOUS_INTENSITY
        - LOGARITHMIC_QUANTITY
        - PRESSURE
        - INFORMATION_CONTENT
        - SCHEDULE
        type: string
      update_parameter:
        description: The update frequency in seconds, or the amount of the property
          has to change in order to trigger an update
        format: double
        type: number
      update_strategy:
        description: The update strategy for the property value
        enum:
        - ON_CHANGE
        - TIMED
        type: string
      variable_name:
        description: The  sketch variable name of the property
        maxLength: 64
        pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
        type: string
    required:
    - name
    - type
    - permission
    - update_strategy
    title: property
    type: object
  propertyValue:
    description: PropertyValuePayload describes a property value
    properties:
      device_id:
        description: The device who send the property
        format: uuid
        type: string
      value:
        description: The property value
    required:
    - value
    title: propertyValue
    type: object
  push_action:
    properties:
      body:
        $ref: '#/definitions/body_expression'
      delivery:
        $ref: '#/definitions/push_delivery_opts'
      title:
        $ref: '#/definitions/title_expression'
    required:
    - delivery
    - title
    - body
    title: push_action
    type: object
  push_delivery_opts:
    properties:
      to:
        description: The recipient of a push notification
        items:
          $ref: '#/definitions/user_recipient'
        minItems: 1
        type: array
    required:
    - to
    title: push_delivery_opts
    type: object
  sharerequest:
    properties:
      message:
        description: The message the user want to send to the dashboard owner
        type: string
    title: sharerequest
    type: object
  sync:
    properties:
      properties:
        description: The ID of the properties you want to sync
        items:
          format: uuid
          type: string
        type: array
      type:
        description: The ID of the properties you want to sync
        enum:
        - ANALOG
        - CHARSTRING
        - FLOAT
        - INT
        - LENGHT_C
        - LENGHT_I
        - LENGHT_M
        - PERCENTAGE
        - STATUS
        - TEMPERATURE_C
        - TEMPERATURE_F
        - METER
        - KILOGRAM
        - GRAM
        - SECOND
        - AMPERE
        - KELVIN
        - CANDELA
        - MOLE
        - HERTZ
        - RADIAN
        - STERADIAN
        - NEWTON
        - PASCAL
        - JOULE
        - WATT
        - COULOMB
        - VOLT
        - FARAD
        - OHM
        - SIEMENS
        - WEBER
        - TESLA
        - HENRY
        - DEGREES_CELSIUS
        - LUMEN
        - LUX
        - BECQUEREL
        - GRAY
        - SIEVERT
        - KATAL
        - SQUARE_METER
        - CUBIC_METER
        - LITER
        - METER_PER_SECOND
        - METER_PER_SQUARE_SECOND
        - CUBIC_METER_PER_SECOND
        - LITER_PER_SECOND
        - WATT_PER_SQUARE_METER
        - CANDELA_PER_SQUARE_METER
        - BIT
        - BIT_PER_SECOND
        - DEGREES_LATITUDE
        - DEGREES_LONGITUDE
        - PH_VALUE
        - DECIBEL
        - DECIBEL_1W
        - BEL
        - COUNT
        - RATIO_DIV
        - RATIO_MOD
        - PERCENTAGE_RELATIVE_HUMIDITY
        - PERCENTAGE_BATTERY_LEVEL
        - SECONDS_BATTERY_LEVEL
        - EVENT_RATE_SECOND
        - EVENT_RATE_MINUTE
        - HEART_RATE
        - HEART_BEATS
        - SIEMENS_PER_METER
        - LOCATION
        - COLOR_HSB
        - COLOR_RGB
        - GENERIC_COMPLEX_PROPERTY
        - HOME_COLORED_LIGHT
        - HOME_DIMMED_LIGHT
        - HOME_LIGHT
        - HOME_CONTACT_SENSOR
        - HOME_MOTION_SENSOR
        - HOME_SMART_PLUG
        - HOME_TEMPERATURE
        - HOME_TEMPERATURE_C
        - HOME_TEMPERATURE_F
        - HOME_SWITCH
        - HOME_TELEVISION
        - GOOGLE_HOME_COLORED_LIGHT
        - GOOGLE_HOME_DIMMED_LIGHT
        - GOOGLE_HOME_LIGHT
        - GOOGLE_HOME_CONTACT_SENSOR
        - GOOGLE_HOME_MOTION_SENSOR
        - GOOGLE_HOME_SMART_PLUG
        - GOOGLE_HOME_TEMPERATURE
        - GOOGLE_HOME_TEMPERATURE_C
        - GOOGLE_HOME_TEMPERATURE_F
        - GOOGLE_HOME_SWITCH
        - SMART_HOME_COLORED_LIGHT
        - SMART_HOME_DIMMED_LIGHT
        - SMART_HOME_LIGHT
        - SMART_HOME_CONTACT_SENSOR
        - SMART_HOME_MOTION_SENSOR
        - SMART_HOME_SMART_PLUG
        - SMART_HOME_TEMPERATURE
        - SMART_HOME_TEMPERATURE_C
        - SMART_HOME_TEMPERATURE_F
        - SMART_HOME_SWITCH
        - SMART_HOME_TELEVISION
        - ENERGY
        - FORCE
        - TEMPERATURE
        - POWER
        - ELECTRIC_CURRENT
        - ELECTRIC_POTENTIAL
        - ELECTRICAL_RESISTANCE
        - CAPACITANCE
        - TIME
        - FREQUENCY
        - DATA_RATE
        - ACCELERATION
        - AREA
        - LENGTH
        - VELOCITY
        - MASS
        - VOLUME
        - FLOW_RATE
        - ANGLE
        - ILLUMINANCE
        - LUMINOUS_FLUX
        - LUMINANCE
        - LUMINOUS_INTENSITY
        - LOGARITHMIC_QUANTITY
        - PRESSURE
        - INFORMATION_CONTENT
        - SCHEDULE
        type: string
    required:
    - type
    - properties
    title: sync
    type: object
  tag:
    properties:
      key:
        description: Key of the tag
        maxLength: 64
        pattern: ^[a-zA-Z0-9_.@-]+$
        type: string
      value:
        description: Value of the tag
        maxLength: 64
        pattern: ^[a-zA-Z0-9_.@-]+$
        type: string
    required:
    - key
    - value
    title: tag
    type: object
  template:
    description: TemplatePayload describes the needed attribute to apply a template
    properties:
      template_name:
        description: The name of the directory on S3 bucket containing the template
        example: remote-controlled-lights
        type: string
      things_options:
        additionalProperties: true
        type: object
    required:
    - template_name
    title: template
    type: object
  thingPropertiesValue:
    properties:
      created_at:
        description: Then the property was created
        format: date-time
        type: string
      name:
        description: The name of the property
        type: string
      value:
        description: The last value of the property
    required:
    - name
    - value
    - created_at
    title: thingPropertiesValue
    type: object
  thingPropertiesValues:
    properties:
      properties:
        items:
          $ref: '#/definitions/thingPropertiesValue'
        type: array
      thing_id:
        format: uuid
        type: string
    required:
    - properties
    title: thingPropertiesValues
    type: object
  thingSketch:
    description: ThingSketchPayload describes a sketch of a thing
    properties:
      sketch_version:
        description: The autogenerated sketch version
        enum:
        - v1
        - v2
        type: string
    title: thingSketch
    type: object
  thingUpdate:
    description: Payload to update an existing thing
    properties:
      device_id:
        description: The arn of the associated device
        format: uuid
        type: string
      id:
        description: The id of the thing
        format: uuid
        type: string
      name:
        description: The friendly name of the thing
        maxLength: 64
        pattern: ^[a-zA-Z0-9_.@ -]+$
        type: string
      properties:
        description: The properties of the thing
        items:
          $ref: '#/definitions/property'
        type: array
      timezone:
        description: |-
          A time zone name.
          Check /v2/timezones for a list of valid names.
        type: string
      webhook_active:
        description: Webhook uri
        type: boolean
      webhook_uri:
        description: Webhook uri
        type: string
    title: thingUpdate
    type: object
  title_expression:
    properties:
      expression:
        description: Content of the title (or subject) of a message, variables are
          allowed
        maxLength: 100
        type: string
      variables:
        description: Variables used by the expression
        items:
          $ref: '#/definitions/variable'
        type: array
    required:
    - expression
    title: title_expression
    type: object
  token:
    description: TokenPayload describes a request to obtain a jwt token
    properties:
      audience:
        description: The audience. It's always https://api2.arduino.cc/iot
        enum:
        - https://api2.arduino.cc/iot
        type: string
      client_id:
        description: The client_id
        maxLength: 32
        pattern: '[a-zA-Z0-9_.@-]+'
        type: string
      client_secret:
        description: The client_secret
        maxLength: 64
        pattern: '[a-zA-Z0-9_.@-]+'
        type: string
      grant_type:
        description: The grant type. It's always client_credentials
        enum:
        - client_credentials
        type: string
    required:
    - grant_type
    - audience
    - client_id
    - client_secret
    title: token
    type: object
  trigger:
    properties:
      actions:
        description: A list of actions to be associated with the trigger
        items:
          $ref: '#/definitions/create-action'
        type: array
      active:
        description: Is true if the trigger is enabled
        type: boolean
      description:
        description: The description of the trigger
        type: string
      id:
        description: The id of the trigger
        format: uuid
        type: string
      name:
        description: The name of the trigger
        type: string
      property_id:
        description: Id of the property the trigger is associated to
        format: uuid
        type: string
    title: trigger
    type: object
  update-action:
    properties:
      description:
        description: The description of the trigger
        type: string
      email:
        $ref: '#/definitions/email_action'
      name:
        description: The name of the action
        type: string
      push_notification:
        $ref: '#/definitions/push_action'
      trigger_id:
        description: Id of the trigger the action is associated to
        format: uuid
        type: string
    title: update-action
    type: object
  updateSketch:
    properties:
      sketch_version:
        description: The autogenerated sketch version
        enum:
        - v1
        - v2
        type: string
    title: updateSketch
    type: object
  user_recipient:
    properties:
      email:
        description: The email address of the user
        type: string
      id:
        description: The id of the user
        format: uuid
        type: string
      username:
        description: The username of the user
        type: string
    required:
    - id
    title: user_recipient
    type: object
  variable:
    properties:
      attribute:
        description: The template expression that extracts the value
        enum:
        - ID
        - NAME
        - VALUE
        - TIMESTAMP
        - USERNAME
        - EMAIL
        example: PROPERTY
        type: string
      entity:
        description: Type of the entity being referenced
        enum:
        - RECIPIENT
        - USER
        - DEVICE
        - THING
        - PROPERTY
        example: PROPERTY
        type: string
      id:
        description: The ID of the referenced entity
        format: uuid
        type: string
      placeholder:
        description: Name of the variable as referenced by the expression
        type: string
    required:
    - placeholder
    - entity
    - id
    - attribute
    title: variable
    type: object
  widget:
    description: Widget describes a dashboard widget
    properties:
      height:
        description: Widget current height for desktop
        format: int64
        type: integer
      height_mobile:
        description: Widget current height for mobile
        format: int64
        type: integer
      id:
        description: The UUID of the widget, set by client
        format: uuid
        type: string
      name:
        description: The name of the widget
        type: string
      options:
        additionalProperties: true
        description: Widget options
        type: object
      type:
        description: The type of the widget
        type: string
      variables:
        items:
          format: uuid
          type: string
        type: array
      width:
        description: Widget current width for desktop
        format: int64
        type: integer
      width_mobile:
        description: Widget current width for mobile
        format: int64
        type: integer
      x:
        description: Widget x position for desktop
        format: int64
        type: integer
      x_mobile:
        description: Widget x position for mobile
        format: int64
        type: integer
      "y":
        description: Widget y position for desktop
        format: int64
        type: integer
      y_mobile:
        description: Widget y position for mobile
        format: int64
        type: integer
    required:
    - id
    - type
    - width
    - height
    - x
    - "y"
    - options
    title: widget
    type: object
  widgetlink:
    properties:
      variables:
        items:
          format: uuid
          type: string
        type: array
    title: widgetlink
    type: object
externalDocs:
  description: See docs on Confluence
  url: https://arduino.atlassian.net/wiki/spaces/FTWEB/pages/91160610/Arduino+IoT+Cloud
info:
  description: Provides a set of endpoints to manage Devices, Things, Properties and
    Timeseries
  title: Arduino IoT Cloud API
  version: "2.0"
paths:
  /iot/apidocs:
    get:
      operationId: public#/iot/apidocs
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - https
      summary: Download templates/publicdocs.html
  /iot/docs:
    get:
      operationId: public#/iot/docs
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - https
      summary: Download templates/docs.html
  /iot/ota/{id}:
    get:
      operationId: ota#getShortlink
      parameters:
      - description: The id of the actual AWS presigned url
        in: path
        name: id
        required: true
        type: string
      produces:
      - binary/octet-stream
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      schemes:
      - https
      summary: getShortlink ota
      tags:
      - ota
  /iot/public-swagger.json:
    get:
      operationId: public#/iot/public-swagger.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - https
      summary: Download swagger/public-swagger.json
  /iot/swagger.json:
    get:
      operationId: public#/iot/swagger.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - https
      summary: Download swagger/swagger.json
  /iot/v1/actions:
    get:
      description: Returns the list of actions
      operationId: actions_v1#list
      parameters:
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.action+json; type=collection
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoActionCollection'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: list actions_v1
      tags:
      - actions_v1
    post:
      description: Creates a new action
      operationId: actions_v1#create
      parameters:
      - in: header
        name: X-Organization
        required: false
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/create-action'
      produces:
      - application/vnd.arduino.action+json
      - application/vnd.goa.error+json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ArduinoAction'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "412":
          description: Precondition Failed
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: create actions_v1
      tags:
      - actions_v1
  /iot/v1/actions/{id}:
    delete:
      description: Removes an action
      operationId: actions_v1#delete
      parameters:
      - description: The id of the action
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: delete actions_v1
      tags:
      - actions_v1
    get:
      description: Returns an action
      operationId: actions_v1#show
      parameters:
      - description: The id of the action
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.action+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoAction'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: show actions_v1
      tags:
      - actions_v1
    put:
      description: Updates an action
      operationId: actions_v1#update
      parameters:
      - description: The id of the action
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/update-action'
      produces:
      - application/vnd.arduino.action+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoAction'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: update actions_v1
      tags:
      - actions_v1
  /iot/v1/cleanup:
    post:
      description: Iot removes the things created more than an hour ago and never
        got reclaimed. It then deletes the certificates that are no longer associated
        with a thing
      operationId: cleanup#iot
      produces:
      - text/plain
      responses:
        "200":
          description: OK
      schemes:
      - https
      summary: iot cleanup
      tags:
      - cleanup
  /iot/v1/clients:
    get:
      description: Returns the list of oauth clients of the user
      operationId: clients_v1#list
      produces:
      - application/vnd.arduino.client+json; type=collection
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoClientCollection'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: list clients_v1
      tags:
      - clients_v1
    put:
      description: Creates a new client associated to the user. It is active by default
      operationId: clients_v1#create
      parameters:
      - description: ClientPayload describes an oauth client
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/client'
      produces:
      - application/vnd.arduino.client+json
      - application/vnd.goa.error+json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ArduinoClient'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: create clients_v1
      tags:
      - clients_v1
  /iot/v1/clients/{id}:
    delete:
      description: Removes a client associated to the user
      operationId: clients_v1#delete
      parameters:
      - description: The id of the client
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: delete clients_v1
      tags:
      - clients_v1
    get:
      description: Returns the client requested by the user
      operationId: clients_v1#show
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/vnd.arduino.client+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoClient'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: show clients_v1
      tags:
      - clients_v1
    patch:
      description: Update an existing client
      operationId: clients_v1#update
      parameters:
      - description: The id of the client
        in: path
        name: id
        required: true
        type: string
      - description: ClientPayload describes an oauth client
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/client'
      produces:
      - application/vnd.arduino.client+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoClient'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: update clients_v1
      tags:
      - clients_v1
    post:
      description: Enable and disables iot clients of a user
      operationId: clients_v1#enable
      parameters:
      - description: The id of the user
        in: path
        name: id
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/enableclient'
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: enable clients_v1
      tags:
      - clients_v1
  /iot/v1/clients/{id}/secret:
    post:
      description: Regenerate client secret
      operationId: clients_v1#regenerate
      parameters:
      - description: The id of the client
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/vnd.arduino.client+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoClient'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: regenerate clients_v1
      tags:
      - clients_v1
  /iot/v1/clients/token:
    post:
      description: Exchange client_id and client_secret for a jwt token
      operationId: clients_v1#token
      parameters:
      - description: TokenPayload describes a request to obtain a jwt token
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/token'
      produces:
      - application/vnd.arduino.token+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoToken'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: token clients_v1
      tags:
      - clients_v1
  /iot/v1/dashboards_shares/{user_id}:
    delete:
      description: Delete shares of user
      operationId: dashboard_shares_v1#deleteByUser
      parameters:
      - description: The user_id of the owner
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: deleteByUser dashboard_shares_v1
      tags:
      - dashboard_shares_v1
  /iot/v1/devices:
    get:
      description: Returns the list of devices associated to the user
      operationId: devices_v1#list
      parameters:
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.devicev1+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoDevicev1Collection'
      schemes:
      - https
      summary: list devices_v1
      tags:
      - devices_v1
    put:
      description: Creates a new device associated to the user. By default it creates
        a device with no name and no certificates attached. If you provide a name
        or a certificate request it will set them up.
      operationId: devices_v1#create
      parameters:
      - in: header
        name: X-Organization
        required: false
        type: string
      - description: DevicePayload describes a device. No field is mandatory
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/devicev1'
      produces:
      - application/vnd.arduino.devicev1+json
      - application/vnd.goa.error+json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ArduinoDevicev1'
        "412":
          description: Precondition Failed
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: create devices_v1
      tags:
      - devices_v1
  /iot/v1/devices/{id}:
    delete:
      description: Removes a device associated to the user
      operationId: devices_v1#delete
      parameters:
      - description: The id of the resource
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
      schemes:
      - https
      summary: delete devices_v1
      tags:
      - devices_v1
    get:
      description: Returns the device requested by the user
      operationId: devices_v1#show
      parameters:
      - description: The id of the resource
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.devicev1+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoDevicev1'
      schemes:
      - https
      summary: show devices_v1
      tags:
      - devices_v1
    post:
      description: Updates a device associated to the user
      operationId: devices_v1#update
      parameters:
      - description: The id of the resource
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      - description: DevicePayload describes a device. No field is mandatory
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/devicev1'
      produces:
      - application/vnd.arduino.devicev1+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoDevicev1'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "412":
          description: Precondition Failed
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: update devices_v1
      tags:
      - devices_v1
  /iot/v1/devices/{id}/image:
    post:
      description: Returns an iso image to be burned into a usb key
      operationId: devices_v1#image
      parameters:
      - description: The id of the resource
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/ImageDevicesV1Payload'
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
      schemes:
      - https
      summary: image devices_v1
      tags:
      - devices_v1
  /iot/v1/devices/connect:
    post:
      description: Returns a signed websocket url to use for a connection
      operationId: devices_v1#connect
      parameters:
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.mqttv1+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoMqttv1'
      schemes:
      - https
      summary: connect devices_v1
      tags:
      - devices_v1
  /iot/v1/lora-app/:
    get:
      description: List the available apps for the given user
      operationId: lora_app_v1#list
      parameters:
      - description: The user id. Could be a uuid, or the string 'me'
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/vnd.arduino.loraappsv1+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoLoraappsv1'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: list lora_app_v1
      tags:
      - lora_app_v1
    put:
      description: Create LoRa apps for the given user
      operationId: lora_app_v1#create
      parameters:
      - description: The user id. Could be a uuid, or the string 'me'
        in: query
        name: user_id
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateLoraAppV1Payload'
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: create lora_app_v1
      tags:
      - lora_app_v1
  /iot/v1/lora-app/{label}:
    delete:
      description: Delete a single app for the given user
      operationId: lora_app_v1#delete
      parameters:
      - in: path
        name: label
        required: true
        type: string
      - description: The user id. Could be a uuid, or the string 'me'
        in: query
        name: user_id
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/DeleteLoraAppV1Payload'
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: delete lora_app_v1
      tags:
      - lora_app_v1
    post:
      description: Update the available apps for the given user
      operationId: lora_app_v1#update
      parameters:
      - in: path
        name: label
        required: true
        type: string
      - description: The user id. Could be a uuid, or the string 'me'
        in: query
        name: user_id
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateLoraAppV1Payload'
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: update lora_app_v1
      tags:
      - lora_app_v1
  /iot/v1/lora-apps/:
    get:
      description: List the available apps for the given user
      operationId: lora_apps_v1#list
      parameters:
      - description: The user id. Could be a uuid, or the string 'me'
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: list lora_apps_v1
      tags:
      - lora_apps_v1
    post:
      description: Update the available apps for the given user
      operationId: lora_apps_v1#update
      parameters:
      - description: The user id. Could be a uuid, or the string 'me'
        in: query
        name: user_id
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateLoraAppsV1Payload'
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: update lora_apps_v1
      tags:
      - lora_apps_v1
  /iot/v1/lora-devices/:
    put:
      description: Create a new lora device. Its info are saved on our database, and
        on the lora provider network. Creates a device_v2 automatically
      operationId: lora_devices_v1#create
      parameters:
      - in: header
        name: X-Organization
        required: false
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateLoraDevicesV1Payload'
      produces:
      - application/vnd.arduino.loradevicev1+json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ArduinoLoradevicev1'
      schemes:
      - https
      summary: create lora_devices_v1
      tags:
      - lora_devices_v1
  /iot/v1/lora-freq-plans/:
    get:
      description: List the lora frequency plans supported
      operationId: lora_freq_plan_v1#list
      produces:
      - application/vnd.arduino.lorafreqplansv1+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoLorafreqplansv1'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: list lora_freq_plan_v1
      tags:
      - lora_freq_plan_v1
  /iot/v1/lora-gw/:
    put:
      description: Create a new pending lora gateway. Its info are only saved on our
        database.
      operationId: lora_gw_v1#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateLoraGwV1Payload'
      produces:
      - application/vnd.arduino.loragwv1+json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ArduinoLoragwv1'
      schemes:
      - https
      summary: create lora_gw_v1
      tags:
      - lora_gw_v1
  /iot/v1/lora-gw/{id}:
    delete:
      description: Removes a lora gateway
      operationId: lora_gw_v1#delete
      parameters:
      - description: The id of the lora gateway. It's calculated from the mac using
          magic
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
      schemes:
      - https
      summary: delete lora_gw_v1
      tags:
      - lora_gw_v1
    get:
      description: Retrieve info about a lora gateway.
      operationId: lora_gw_v1#show
      parameters:
      - description: The id of the lora gateway. It's calculated from the mac using
          magic
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/vnd.arduino.loragwv1+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoLoragwv1'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: show lora_gw_v1
      tags:
      - lora_gw_v1
  /iot/v1/lora-gw/{id}/claim:
    post:
      description: Assign a lora gateway to a user, create a device_v1 resource, create
        an tts user (if not existing), create the device on tts
      operationId: lora_gw_v1#claim
      parameters:
      - description: The mac/serial_number/device_code of the lora gateway. It is
          printed on the box, and used to connect to tts.
        in: path
        name: id
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/ClaimLoraGwV1Payload'
      produces:
      - application/vnd.arduino.loragwv1+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoLoragwv1'
      schemes:
      - https
      summary: claim lora_gw_v1
      tags:
      - lora_gw_v1
  /iot/v1/lora-gw/{id}/unclaim:
    post:
      description: Remove the gateway from tts, delete the device_v1 resource.
      operationId: lora_gw_v1#unclaim
      parameters:
      - description: The mac/serial_number/device_code of the lora gateway. It is
          printed on the box, and used to connect to tts.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/vnd.arduino.loragwv1+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoLoragwv1'
      schemes:
      - https
      summary: unclaim lora_gw_v1
      tags:
      - lora_gw_v1
  /iot/v1/manage/users/{id}:
    delete:
      description: Deletes the user, all their sketches and libraries
      operationId: manage#delete_user
      parameters:
      - description: The id of the user. Can be 'me' to access the currently authenticated
          user
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "404":
          description: 'NotFound: The requested user doesn''t exist or it''s not visible
            to the current user.'
      schemes:
      - https
      summary: delete_user manage
      tags:
      - manage
  /iot/v1/manage/users/{id}/export:
    get:
      description: Exports an archive containing all user info.
      operationId: manage#export_user
      parameters:
      - description: The id of the user. Can be 'me' to access the currently authenticated
          user
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      schemes:
      - https
      summary: export_user manage
      tags:
      - manage
  /iot/v1/network_credentials/{type}:
    get:
      description: Show required network credentials depending on device type
      operationId: network_credentials_v1#show
      parameters:
      - description: Connection used by the device
        enum:
        - wifi
        - eth
        - wifiandsecret
        - gsm
        - nb
        - lora
        in: query
        name: connection
        required: false
        type: string
      - description: Device type
        enum:
        - mkrwifi1010
        - mkr1000
        - nano_33_iot
        - mkrgsm1400
        - mkrwan1310
        - mkrwan1300
        - mkrnb1500
        - lora-device
        - login_and_secretkey_wifi
        - envie_m7
        - nanorp2040connect
        - nicla_vision
        - opta
        - giga
        - portenta_c33
        - unor4wifi
        - nano_nora
        in: path
        name: type
        required: true
        type: string
      produces:
      - application/vnd.arduino.credentialsv1+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoCredentialsv1Collection'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      schemes:
      - https
      summary: show network_credentials_v1
      tags:
      - network_credentials_v1
  /iot/v1/network_credentials/{type}/connections:
    get:
      description: Show available connection types depending on device type
      operationId: network_credentials_v1#showByDevice
      parameters:
      - description: Device type
        enum:
        - mkrwifi1010
        - mkr1000
        - nano_33_iot
        - mkrgsm1400
        - mkrwan1310
        - mkrwan1300
        - mkrnb1500
        - lora-device
        - login_and_secretkey_wifi
        - envie_m7
        - nanorp2040connect
        - nicla_vision
        - opta
        - giga
        - portenta_c33
        - unor4wifi
        - nano_nora
        in: path
        name: type
        required: true
        type: string
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      schemes:
      - https
      summary: showByDevice network_credentials_v1
      tags:
      - network_credentials_v1
  /iot/v1/properties:
    get:
      description: Returns the list of all properties of the user
      operationId: properties#listAll
      produces:
      - application/vnd.arduino.property+json; type=collection
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoPropertyCollection'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: listAll properties
      tags:
      - properties
  /iot/v1/property_types:
    get:
      description: Returns the list of available property types
      operationId: property_types_v1#listTypes
      produces:
      - application/vnd.arduino.propertytype+json; type=collection
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoPropertytypeCollection'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: listTypes property_types_v1
      tags:
      - property_types_v1
  /iot/v1/series/batch_query:
    post:
      description: Returns the batch of time-series aggregated samples
      operationId: series_v1#batch_query
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/BatchQueryRequestsMediaV1'
      produces:
      - application/vnd.arduino.series.batch+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoSeriesBatch'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "501":
          description: Not Implemented
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: batch_query series_v1
      tags:
      - series_v1
  /iot/v1/series/batch_query_raw:
    post:
      description: Returns the batch of time-series raw samples
      operationId: series_v1#batch_query_raw
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/BatchQueryRawRequestsMediaV1'
      produces:
      - application/vnd.arduino.series.raw.batch+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoSeriesRawBatch'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "501":
          description: Not Implemented
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: batch_query_raw series_v1
      tags:
      - series_v1
  /iot/v1/series/batch_query_raw/lastvalue:
    post:
      description: Returns the batch of time-series data raw
      operationId: series_v1#batch_query_raw_last_value
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/BatchLastValueRequestsMediaV1'
      produces:
      - application/vnd.arduino.series.raw.batch.lastvalue+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoSeriesRawBatchLastvalue'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "501":
          description: Not Implemented
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: batch_query_raw_last_value series_v1
      tags:
      - series_v1
  /iot/v1/series/historic_data:
    post:
      description: Request sending of historical data of properties by email
      operationId: series_v1#historic_data
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/HistoricDataRequest'
      produces:
      - application/vnd.goa.error+json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: historic_data series_v1
      tags:
      - series_v1
  /iot/v1/supported/devices:
    get:
      description: Returns a list of the supported devices
      operationId: supported_v1#devices
      produces:
      - application/vnd.arduino.supporteddevicev1+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoSupporteddevicev1Collection'
      schemes:
      - https
      summary: devices supported_v1
      tags:
      - supported_v1
  /iot/v1/sync:
    get:
      description: Returns the list of sync
      operationId: sync_v1#list
      parameters:
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.sync+json; type=collection
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoSyncCollection'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: list sync_v1
      tags:
      - sync_v1
    put:
      description: Creates a new sync
      operationId: sync_v1#create
      parameters:
      - in: header
        name: X-Organization
        required: false
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/sync'
      produces:
      - application/vnd.arduino.sync+json
      - application/vnd.goa.error+json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ArduinoSync'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "412":
          description: Precondition Failed
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: create sync_v1
      tags:
      - sync_v1
  /iot/v1/sync/{id}:
    delete:
      description: Removes a sync
      operationId: sync_v1#delete
      parameters:
      - description: The id of the sync
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: delete sync_v1
      tags:
      - sync_v1
    get:
      description: Returns a sync
      operationId: sync_v1#show
      parameters:
      - description: The id of the sync
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.sync+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoSync'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: show sync_v1
      tags:
      - sync_v1
    post:
      description: Updates a a sync
      operationId: sync_v1#update
      parameters:
      - description: The id of the sync
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/sync'
      produces:
      - application/vnd.arduino.sync+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoSync'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: update sync_v1
      tags:
      - sync_v1
  /iot/v1/templates:
    put:
      description: Apply an existing cloud template and generate all the needed resources
      operationId: templates#apply
      parameters:
      - in: header
        name: X-Organization
        required: false
        type: string
      - description: TemplatePayload describes the needed attribute to apply a template
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/template'
      produces:
      - application/vnd.arduino.template+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoTemplate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: apply templates
      tags:
      - templates
  /iot/v1/things:
    get:
      description: Returns the list of things associated to the user
      operationId: things_v1#list
      parameters:
      - default: false
        description: If true, returns all the things
        in: query
        name: across_user_ids
        required: false
        type: boolean
      - description: The id of the device you want to filter
        in: query
        name: device_id
        required: false
        type: string
      - description: Filter only the desired things
        in: query
        items:
          type: string
        name: ids
        required: false
        type: array
      - default: false
        description: If true, shows the soft deleted things
        in: query
        name: show_deleted
        required: false
        type: boolean
      - default: false
        description: If true, returns things with their properties, and last values
        in: query
        name: show_properties
        required: false
        type: boolean
      - description: Filter by tags
        in: query
        items:
          maxLength: 129
          pattern: ^[a-zA-Z0-9_.@-]+:[a-zA-Z0-9_.@-]+$
          type: string
        name: tags
        required: false
        type: array
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.thing+json; type=collection
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoThingCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: list things_v1
      tags:
      - things_v1
    put:
      description: Creates a new thing associated to the user
      operationId: things_v1#create
      parameters:
      - default: false
        description: If true, detach device from the other thing, and attach to this
          thing
        in: query
        name: force
        required: false
        type: boolean
      - in: header
        name: X-Organization
        required: false
        type: string
      - description: Payload to create a new thing
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/ThingCreate'
      produces:
      - application/vnd.arduino.thing+json
      - application/vnd.goa.error+json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ArduinoThing'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error'
        "412":
          description: Precondition Failed
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: create things_v1
      tags:
      - things_v1
  /iot/v1/things/{id}:
    delete:
      description: Removes a thing associated to the user
      operationId: things_v1#delete
      parameters:
      - default: false
        description: If true, hard delete the thing
        in: query
        name: force
        required: false
        type: boolean
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: delete things_v1
      tags:
      - things_v1
    get:
      description: Returns the thing requested by the user
      operationId: things_v1#show
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - default: false
        description: If true, shows the soft deleted thing
        in: query
        name: show_deleted
        required: false
        type: boolean
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.thing+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoThing'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: show things_v1
      tags:
      - things_v1
    post:
      description: Updates a thing associated to the user
      operationId: things_v1#update
      parameters:
      - default: false
        description: If true, detach device from the other thing, and attach to this
          thing
        in: query
        name: force
        required: false
        type: boolean
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      - description: Payload to update an existing thing
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/thingUpdate'
      produces:
      - application/vnd.arduino.thing+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoThing'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error'
        "412":
          description: Precondition Failed
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: update things_v1
      tags:
      - things_v1
  /iot/v1/things/{id}/device:
    get:
      description: Returns the device attached to the thing
      operationId: things_v1#showDevice
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.devicev2+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoDevicev2'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: showDevice things_v1
      tags:
      - things_v1
  /iot/v1/things/{id}/layout:
    get:
      description: Returns the thing requested by the user, without last values data
      operationId: things_v1#layout
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - default: false
        description: If true, shows the soft deleted thing
        in: query
        name: show_deleted
        required: false
        type: boolean
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.thinglayout+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoThinglayout'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: layout things_v1
      tags:
      - things_v1
  /iot/v1/things/{id}/properties:
    get:
      description: Returns the list of properties associated to the thing
      operationId: thing_properties_v1#list
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - default: false
        description: If true, shows the soft deleted properties
        in: query
        name: show_deleted
        required: false
        type: boolean
      - description: The id of the organization
        in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.property+json; type=collection
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoPropertyCollection'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: list thing_properties_v1
      tags:
      - thing_properties_v1
    put:
      description: Creates a new property associated to a thing
      operationId: thing_properties_v1#create
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - description: The id of the organization
        in: header
        name: X-Organization
        required: false
        type: string
      - description: PropertyPayload describes a property of a thing. No field is
          mandatory
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/property'
      produces:
      - application/vnd.arduino.property+json
      - application/vnd.goa.error+json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ArduinoProperty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "412":
          description: Precondition Failed
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: create thing_properties_v1
      tags:
      - thing_properties_v1
  /iot/v1/things/{id}/properties/{pid}:
    delete:
      description: Removes a property associated to a thing
      operationId: thing_properties_v1#delete
      parameters:
      - default: false
        description: If true, hard delete the property
        in: query
        name: force
        required: false
        type: boolean
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - description: The id of the property
        in: path
        name: pid
        required: true
        type: string
      - description: The id of the organization
        in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: delete thing_properties_v1
      tags:
      - thing_properties_v1
    get:
      description: Returns the property requested by the user
      operationId: thing_properties_v1#show
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - description: The id of the property
        in: path
        name: pid
        required: true
        type: string
      - default: false
        description: If true, shows the soft deleted properties
        in: query
        name: show_deleted
        required: false
        type: boolean
      - description: The id of the organization
        in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.property+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoProperty'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: show thing_properties_v1
      tags:
      - thing_properties_v1
    post:
      description: Updates a property associated to a thing
      operationId: thing_properties_v1#update
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - description: The id of the property
        in: path
        name: pid
        required: true
        type: string
      - description: The id of the organization
        in: header
        name: X-Organization
        required: false
        type: string
      - description: PropertyPayload describes a property of a thing. No field is
          mandatory
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/property'
      produces:
      - application/vnd.arduino.property+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoProperty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: update thing_properties_v1
      tags:
      - thing_properties_v1
  /iot/v1/things/{id}/properties/{pid}/publish:
    put:
      description: Publish a property value to MQTT
      operationId: thing_properties_v1#publish
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - description: The id of the property
        in: path
        name: pid
        required: true
        type: string
      - description: The id of the organization
        in: header
        name: X-Organization
        required: false
        type: string
      - description: PropertyValuePayload describes a property value
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/propertyValue'
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: publish thing_properties_v1
      tags:
      - thing_properties_v1
  /iot/v1/things/{id}/properties/{pid}/timeseries:
    get:
      description: 'Get numerical property''s historic data binned on a specified
        time interval (note: the total number of data points should NOT be greater
        than 1000 otherwise the result will be truncated)'
      operationId: thing_properties_v1#timeseries
      parameters:
      - description: Samples aggregation statistic. Supported aggregations AVG|MAX|MIN|COUNT|SUM|PCT_99|PCT_95|PCT_90|PCT_75|PCT_50|PCT_15|PCT_5
        enum:
        - AVG
        - MIN
        - MAX
        - SUM
        - COUNT
        - PCT_99
        - PCT_95
        - PCT_90
        - PCT_75
        - PCT_50
        - PCT_15
        - PCT_5
        in: query
        name: aggregation
        required: false
        type: string
      - default: false
        description: Whether data's ordering (by time) should be descending
        in: query
        name: desc
        required: false
        type: boolean
      - description: 'Get data with a timestamp >= to this date (default: 2 weeks
          ago, min: 1842-01-01T00:00:00Z, max: 2242-01-01T00:00:00Z)'
        in: query
        name: from
        required: false
        type: string
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - description: 'Binning interval in seconds (defaut: the smallest possible value
          compatibly with the limit of 1000 data points in the response)'
        in: query
        minimum: 1
        name: interval
        required: false
        type: integer
      - description: ID of a numerical property
        in: path
        name: pid
        required: true
        type: string
      - description: 'Get data with a timestamp < to this date (default: now, min:
          1842-01-01T00:00:00Z, max: 2242-01-01T00:00:00Z)'
        in: query
        name: to
        required: false
        type: string
      - description: The id of the organization
        in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.timeseriesmedia+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoTimeseriesmedia'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: timeseries thing_properties_v1
      tags:
      - thing_properties_v1
  /iot/v1/things/{id}/shadow/send:
    post:
      description: Publish the last property values to MQTT
      operationId: things_v1#shadow
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/thingPropertiesValues'
      produces:
      - application/vnd.goa.error+json
      responses:
        "202":
          description: Accepted
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: shadow things_v1
      tags:
      - things_v1
  /iot/v1/things/{id}/sketch:
    delete:
      operationId: things_v1#deleteSketch
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.thing+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoThing'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: deleteSketch things_v1
      tags:
      - things_v1
    put:
      description: Creates a new sketch thing associated to the thing
      operationId: things_v1#createSketch
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      - description: ThingSketchPayload describes a sketch of a thing
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/thingSketch'
      produces:
      - application/vnd.arduino.thing+json
      - application/vnd.goa.error+json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ArduinoThing'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "412":
          description: Precondition Failed
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: createSketch things_v1
      tags:
      - things_v1
  /iot/v1/things/{id}/sketch/{sketchId}:
    put:
      description: Update an existing thing sketch
      operationId: things_v1#updateSketch
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - description: The id of the sketch
        in: path
        name: sketchId
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      - in: body
        name: payload
        required: false
        schema:
          $ref: '#/definitions/updateSketch'
      produces:
      - application/vnd.arduino.thing+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoThing'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "412":
          description: Precondition Failed
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: updateSketch things_v1
      tags:
      - things_v1
  /iot/v1/things/{id}/sketch/{sketchId}/rename:
    put:
      description: Update an existing thing sketch name
      operationId: things_v1#updateSketchName
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - description: The id of the sketch
        in: path
        name: sketchId
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.thing+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoThing'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "412":
          description: Precondition Failed
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: updateSketchName things_v1
      tags:
      - things_v1
  /iot/v1/things/{id}/tags:
    get:
      description: List tags associated to the thing.
      operationId: things_v1_tags#list
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/vnd.arduino.tags+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoTags'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: list things_v1_tags
      tags:
      - things_v1_tags
    put:
      description: Creates or updates a tag associated to the thing.
      operationId: things_v1_tags#upsert
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/tag'
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: upsert things_v1_tags
      tags:
      - things_v1_tags
  /iot/v1/things/{id}/tags/{key}:
    delete:
      description: Delete a tag associated to the thing given its key.
      operationId: things_v1_tags#delete
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - description: The key of the tag
        in: path
        maxLength: 64
        name: key
        required: true
        type: string
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: delete things_v1_tags
      tags:
      - things_v1_tags
  /iot/v1/triggers:
    get:
      description: Returns the list of triggers
      operationId: triggers_v1#list
      parameters:
      - description: The id of the property associated with the triggers
        in: query
        name: property_id
        required: false
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.trigger+json; type=collection
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoTriggerCollection'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: list triggers_v1
      tags:
      - triggers_v1
    put:
      description: Creates a new trigger
      operationId: triggers_v1#create
      parameters:
      - in: header
        name: X-Organization
        required: false
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/trigger'
      produces:
      - application/vnd.arduino.trigger+json
      - application/vnd.goa.error+json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ArduinoTrigger'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "412":
          description: Precondition Failed
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: create triggers_v1
      tags:
      - triggers_v1
  /iot/v1/triggers/{id}:
    delete:
      description: Removes a trigger
      operationId: triggers_v1#delete
      parameters:
      - description: The id of the trigger
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: delete triggers_v1
      tags:
      - triggers_v1
    get:
      description: Returns a trigger
      operationId: triggers_v1#show
      parameters:
      - description: The id of the trigger
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.trigger_with_property+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoTrigger_with_property'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: show triggers_v1
      tags:
      - triggers_v1
    patch:
      description: Patch a trigger
      operationId: triggers_v1#patch
      parameters:
      - description: The id of the trigger
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/trigger'
      produces:
      - application/vnd.arduino.trigger+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoTrigger'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: patch triggers_v1
      tags:
      - triggers_v1
    post:
      description: Updates a trigger
      operationId: triggers_v1#update
      parameters:
      - description: The id of the trigger
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/trigger'
      produces:
      - application/vnd.arduino.trigger+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoTrigger'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: update triggers_v1
      tags:
      - triggers_v1
  /iot/v1/users/byEmail/{email}:
    get:
      description: Verify if an email belongs to an Arduino Account
      operationId: users_v1#verifyEmail
      parameters:
      - description: The email you want to check
        format: email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/vnd.arduino.user+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoUser'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: verifyEmail users_v1
      tags:
      - users_v1
  /iot/v1/users/byId/{user_id}:
    get:
      description: Get user by ID
      operationId: users_v1#getByID
      parameters:
      - description: The uuid of the user you want to get
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/vnd.arduino.user+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoUser'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: getByID users_v1
      tags:
      - users_v1
  /iot/v1/users/byUsername/{username}:
    get:
      description: Returns a list of users that matches the username provided
      operationId: users_v1#byUsername
      parameters:
      - description: The username of the user you want to retrieve
        in: path
        minLength: 3
        name: username
        required: true
        type: string
      produces:
      - application/vnd.arduino.user+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoUser'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      summary: byUsername users_v1
      tags:
      - users_v1
  /iot/v2/binaries/{name}:
    get:
      description: Returns the sketch binary requested by the user
      operationId: binaries_v2#show
      parameters:
      - description: The FQBN you need the binary run to
        enum:
        - arduino:samd:mkr1000
        - arduino:samd:mkrwifi1010
        - arduino:samd:mkrgsm1400
        - arduino:samd:nano_33_iot
        - arduino:samd:mkrnb1500
        - arduino:samd:mkrwan1300
        - arduino:samd:mkrwan1310
        - arduino:mbed_portenta:envie_m7
        - arduino:mbed_nano:nanorp2040connect
        - arduino:mbed_nicla:nicla_vision
        - arduino:mbed_opta:opta
        - arduino:mbed_giga:giga
        - arduino:renesas_portenta:portenta_c33
        - arduino:esp32:nano_nora
        - arduino:renesas_uno:unor4wifi
        in: query
        name: fqbn
        required: true
        type: string
      - description: The name of the sketch
        in: path
        maxLength: 64
        name: name
        pattern: ^[a-zA-Z0-9_-]+$
        required: true
        type: string
      produces:
      - application/vnd.arduino.binary+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoBinary'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: show binaries_v2
      tags:
      - binaries_v2
  /iot/v2/dashboards:
    get:
      description: Returns the list of dashboards
      operationId: dashboards_v2#list
      parameters:
      - description: The name of the dashboard
        in: query
        maxLength: 64
        name: name
        pattern: '[a-zA-Z0-9_.@-]+'
        required: false
        type: string
      - description: The user_id of the dashboard's owner
        in: query
        name: user_id
        required: false
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.dashboardv2+json; type=collection
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoDashboardv2Collection'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: list dashboards_v2
      tags:
      - dashboards_v2
    post:
      description: Create a new dashboard
      operationId: dashboards_v2#create
      parameters:
      - in: header
        name: X-Organization
        required: false
        type: string
      - description: DashboardV2Payload describes a dashboard
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dashboardv2'
      produces:
      - application/vnd.arduino.dashboardv2+json
      - application/vnd.goa.error+json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ArduinoDashboardv2'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: create dashboards_v2
      tags:
      - dashboards_v2
  /iot/v2/dashboards/{id}:
    delete:
      description: Delete a dashboard
      operationId: dashboards_v2#delete
      parameters:
      - description: The id of the dashboard
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: delete dashboards_v2
      tags:
      - dashboards_v2
    get:
      description: Show a dashboard
      operationId: dashboards_v2#show
      parameters:
      - description: The id of the dashboard
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.dashboardv2+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoDashboardv2'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: show dashboards_v2
      tags:
      - dashboards_v2
    put:
      description: Updates an existing dashboard
      operationId: dashboards_v2#update
      parameters:
      - description: The id of the dashboard
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      - description: DashboardV2Payload describes a dashboard
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dashboardv2'
      produces:
      - application/vnd.arduino.dashboardv2+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoDashboardv2'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: update dashboards_v2
      tags:
      - dashboards_v2
  /iot/v2/dashboards/{id}/clone:
    put:
      description: Clone an existing dashboard
      operationId: dashboards_v2#clone
      parameters:
      - description: The id of the dashboard
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/clone'
      produces:
      - application/vnd.arduino.dashboardv2+json
      - application/vnd.goa.error+json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ArduinoDashboardv2'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: clone dashboards_v2
      tags:
      - dashboards_v2
  /iot/v2/dashboards/{id}/share_request:
    put:
      description: Request access to a dashboard
      operationId: dashboards_v2#requestAccess
      parameters:
      - description: The id of the dashboard
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/sharerequest'
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: requestAccess dashboards_v2
      tags:
      - dashboards_v2
  /iot/v2/dashboards/{id}/shares:
    get:
      description: List of users the dashboard has been shared with
      operationId: dashboards_v2#listShares
      parameters:
      - description: The id of the dashboard
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.dashboardshare+json; type=collection
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoDashboardshareCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: listShares dashboards_v2
      tags:
      - dashboards_v2
    put:
      description: Share a dashboard
      operationId: dashboards_v2#share
      parameters:
      - description: The id of the dashboard
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dashboardshare'
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: share dashboards_v2
      tags:
      - dashboards_v2
  /iot/v2/dashboards/{id}/shares/{user_id}:
    delete:
      description: Delete a user the dashboard has been shared with
      operationId: dashboards_v2#deleteShare
      parameters:
      - description: The id of the dashboard
        in: path
        name: id
        required: true
        type: string
      - description: The id of the user
        in: path
        name: user_id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: deleteShare dashboards_v2
      tags:
      - dashboards_v2
  /iot/v2/dashboards/{id}/template:
    get:
      description: Get a template of the dashboard
      operationId: dashboards_v2#template
      parameters:
      - description: The id of the dashboard
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.dashboardv2template+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoDashboardv2template'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: template dashboards_v2
      tags:
      - dashboards_v2
  /iot/v2/dashboards/{id}/widgets/{widgetId}/variables:
    put:
      description: Link or detach widget variables
      operationId: dashboards_v2#link
      parameters:
      - description: The id of the dashboard
        in: path
        name: id
        required: true
        type: string
      - description: The id of the widget
        in: path
        name: widgetId
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/widgetlink'
      produces:
      - application/vnd.arduino.variableslinks+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoVariableslinks'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: link dashboards_v2
      tags:
      - dashboards_v2
  /iot/v2/devices:
    get:
      description: Returns the list of devices associated to the user
      operationId: devices_v2#list
      parameters:
      - default: false
        description: If true, returns all the devices
        in: query
        name: across_user_ids
        required: false
        type: boolean
      - description: Filter by device serial number
        in: query
        name: serial
        required: false
        type: string
      - description: Filter by tags
        in: query
        items:
          maxLength: 129
          pattern: ^[a-zA-Z0-9_.@-]+:[a-zA-Z0-9_.@-]+$
          type: string
        name: tags
        required: false
        type: array
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.devicev2+json; type=collection
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoDevicev2Collection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: list devices_v2
      tags:
      - devices_v2
    put:
      description: Creates a new device associated to the user.
      operationId: devices_v2#create
      parameters:
      - in: header
        name: X-Organization
        required: false
        type: string
      - description: DeviceV2 describes a device.
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateDevicesV2Payload'
      produces:
      - application/vnd.arduino.devicev2+json
      - application/vnd.goa.error+json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ArduinoDevicev2'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "412":
          description: Precondition Failed
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: create devices_v2
      tags:
      - devices_v2
  /iot/v2/devices/{id}:
    delete:
      description: Removes a device associated to the user
      operationId: devices_v2#delete
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: delete devices_v2
      tags:
      - devices_v2
    get:
      description: Returns the device requested by the user
      operationId: devices_v2#show
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.devicev2+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoDevicev2'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: show devices_v2
      tags:
      - devices_v2
    post:
      description: Updates a device associated to the user
      operationId: devices_v2#update
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      - description: DeviceV2 describes a device.
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/devicev2'
      produces:
      - application/vnd.arduino.devicev2+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoDevicev2'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: update devices_v2
      tags:
      - devices_v2
  /iot/v2/devices/{id}/certs:
    get:
      description: Returns the list of certs associated to the device
      operationId: devices_v2_certs#list
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/vnd.arduino.devicev2.cert+json; type=collection
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoDevicev2CertCollection'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: list devices_v2_certs
      tags:
      - devices_v2_certs
    put:
      description: Creates a new cert associated to a device. The csr is signed and
        saved in database. The CommonName will be replaced with the device id.
      operationId: devices_v2_certs#create
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateDevicesV2CertsPayload'
      produces:
      - application/vnd.arduino.devicev2.cert+json
      - application/vnd.goa.error+json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ArduinoDevicev2Cert'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: create devices_v2_certs
      tags:
      - devices_v2_certs
  /iot/v2/devices/{id}/certs/{cid}:
    delete:
      description: Removes a cert associated to a device
      operationId: devices_v2_certs#delete
      parameters:
      - description: The id of the cert
        in: path
        name: cid
        required: true
        type: string
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: delete devices_v2_certs
      tags:
      - devices_v2_certs
    get:
      description: Returns the cert requested by the user
      operationId: devices_v2_certs#show
      parameters:
      - description: The id of the cert
        in: path
        name: cid
        required: true
        type: string
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/vnd.arduino.devicev2.cert+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoDevicev2Cert'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: show devices_v2_certs
      tags:
      - devices_v2_certs
    post:
      description: Updates a cert associated to a device. The csr is signed and saved
        in database. The CommonName will be replaced with the device id.
      operationId: devices_v2_certs#update
      parameters:
      - description: The id of the cert
        in: path
        name: cid
        required: true
        type: string
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/devicev2.cert'
      produces:
      - application/vnd.arduino.devicev2.cert+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoDevicev2Cert'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: update devices_v2_certs
      tags:
      - devices_v2_certs
  /iot/v2/devices/{id}/events:
    get:
      description: GET device events
      operationId: devices_v2#getEvents
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      - description: The number of events to select
        in: query
        name: limit
        required: false
        type: integer
      - description: The time at which to start selecting events
        in: query
        name: start
        required: false
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.devicev2.event.properties+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoDevicev2EventProperties'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: getEvents devices_v2
      tags:
      - devices_v2
  /iot/v2/devices/{id}/image:
    post:
      description: Returns an iso image to be burned into a usb key
      operationId: devices_v2#image
      parameters:
      - description: The id of the resource
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/ImageDevicesV2Payload'
      produces:
      - application/octet-stream
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: image devices_v2
      tags:
      - devices_v2
  /iot/v2/devices/{id}/metadata:
    get:
      description: Returns metadata of a device
      operationId: devices_v2_metadata#list
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - oauth2: []
      summary: list devices_v2_metadata
      tags:
      - devices_v2_metadata
    put:
      description: Sets metadata of a device
      operationId: devices_v2_metadata#set
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/SetDevicesV2MetadataPayload'
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - oauth2: []
      summary: set devices_v2_metadata
      tags:
      - devices_v2_metadata
  /iot/v2/devices/{id}/metadata/{key}:
    delete:
      description: Removes the a metadata key of the device.
      operationId: devices_v2_metadata#delete
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      - in: path
        name: key
        required: true
        type: string
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - oauth2: []
      summary: delete devices_v2_metadata
      tags:
      - devices_v2_metadata
  /iot/v2/devices/{id}/ota:
    post:
      consumes:
      - multipart/form-data
      description: Upload a binary and send it to a device
      operationId: devices_v2_ota#upload
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      - default: true
        description: If false, wait for the full OTA process, until it gets a result
          from the device
        in: formData
        name: async
        required: false
        type: boolean
      - default: 10
        description: Binary expire time in minutes, default 10 mins
        in: formData
        name: expire_in_mins
        required: false
        type: integer
      - description: OTA file
        in: formData
        name: ota_file
        required: true
        type: file
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/error'
        "412":
          description: Precondition Failed
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: upload devices_v2_ota
      tags:
      - devices_v2_ota
    put:
      description: Send a binary url to a device
      operationId: devices_v2_ota#send
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/devicev2.otabinaryurl'
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/error'
        "412":
          description: Precondition Failed
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: send devices_v2_ota
      tags:
      - devices_v2_ota
  /iot/v2/devices/{id}/pass:
    delete:
      description: Removes the password for the device.
      operationId: devices_v2_pass#delete
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: delete devices_v2_pass
      tags:
      - devices_v2_pass
    get:
      description: Returns whether the password for this device is set or not. It
        doesn't return the password.
      operationId: devices_v2_pass#get
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      - default: false
        description: If true, return a suggested password
        in: query
        name: suggested_password
        required: false
        type: boolean
      produces:
      - application/vnd.arduino.devicev2.pass+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoDevicev2Pass'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: get devices_v2_pass
      tags:
      - devices_v2_pass
    post:
      description: Check if the password matches.
      operationId: devices_v2_pass#check
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CheckDevicesV2PassPayload'
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: check devices_v2_pass
      tags:
      - devices_v2_pass
    put:
      description: Sets the password for the device. It can never be read back.
      operationId: devices_v2_pass#set
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/devicev2.pass'
      produces:
      - application/vnd.arduino.devicev2.pass+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoDevicev2Pass'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: set devices_v2_pass
      tags:
      - devices_v2_pass
  /iot/v2/devices/{id}/properties:
    get:
      description: GET device properties
      operationId: devices_v2#getProperties
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      - default: false
        description: If true, shows the soft deleted properties
        in: query
        name: show_deleted
        required: false
        type: boolean
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.devicev2properties+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoDevicev2properties'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: getProperties devices_v2
      tags:
      - devices_v2
    put:
      description: Update device properties last values
      operationId: devices_v2#updateProperties
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/propertiesValues'
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: updateProperties devices_v2
      tags:
      - devices_v2
  /iot/v2/devices/{id}/properties/{pid}:
    get:
      description: GET device properties values in a range of time
      operationId: devices_v2#timeseries
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      - description: The number of properties to select
        in: query
        name: limit
        required: false
        type: integer
      - description: The id of the property
        in: path
        name: pid
        required: true
        type: string
      - description: The time at which to start selecting properties
        in: query
        name: start
        required: false
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.devicev2propertyvalues+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoDevicev2propertyvalues'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: timeseries devices_v2
      tags:
      - devices_v2
  /iot/v2/devices/{id}/pubkeys:
    get:
      description: Returns the list of pubkeys associated to the device
      operationId: devices_v2_pubkeys#list
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/vnd.arduino.devicev2.pubkey+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoDevicev2PubkeyCollection'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - oauth2: []
      summary: list devices_v2_pubkeys
      tags:
      - devices_v2_pubkeys
    put:
      description: Creates a new pubkey associated to a device
      operationId: devices_v2_pubkeys#create
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateDevicesV2PubkeysPayload'
      produces:
      - application/vnd.arduino.devicev2.pubkey+json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ArduinoDevicev2Pubkey'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - oauth2: []
      summary: create devices_v2_pubkeys
      tags:
      - devices_v2_pubkeys
  /iot/v2/devices/{id}/pubkeys/{pid}:
    delete:
      description: Removes a pubkey associated to a device
      operationId: devices_v2_pubkeys#delete
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      - description: The id of the pubkey
        in: path
        name: pid
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - oauth2: []
      summary: delete devices_v2_pubkeys
      tags:
      - devices_v2_pubkeys
    get:
      description: Returns the pubkey requested by the user
      operationId: devices_v2_pubkeys#show
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      - description: The id of the pubkey
        in: path
        name: pid
        required: true
        type: string
      produces:
      - application/vnd.arduino.devicev2.pubkey+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoDevicev2Pubkey'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - oauth2: []
      summary: show devices_v2_pubkeys
      tags:
      - devices_v2_pubkeys
    post:
      description: Updates a pubkey associated to a device
      operationId: devices_v2_pubkeys#update
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      - description: The id of the pubkey
        in: path
        name: pid
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/devicev2.pubkey'
      produces:
      - application/vnd.arduino.devicev2.pubkey+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoDevicev2Pubkey'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      schemes:
      - https
      security:
      - oauth2: []
      summary: update devices_v2_pubkeys
      tags:
      - devices_v2_pubkeys
  /iot/v2/devices/{id}/status:
    get:
      description: GET connection status events
      operationId: devices_v2#GetStatusEvents
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      - default: 30
        description: The number of events to select
        in: query
        name: limit
        required: false
        type: integer
      - description: The time at which to start selecting events
        in: query
        name: start
        required: false
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.devicev2.status.events+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoDevicev2StatusEvents'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: GetStatusEvents devices_v2
      tags:
      - devices_v2
  /iot/v2/devices/{id}/tags:
    get:
      description: List tags associated to the device.
      operationId: devices_v2_tags#list
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/vnd.arduino.tags+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoTags'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: list devices_v2_tags
      tags:
      - devices_v2_tags
    put:
      description: Creates or updates a tag associated to the device.
      operationId: devices_v2_tags#upsert
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/tag'
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: upsert devices_v2_tags
      tags:
      - devices_v2_tags
  /iot/v2/devices/{id}/tags/{key}:
    delete:
      description: Delete a tag associated to the device given its key.
      operationId: devices_v2_tags#delete
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      - description: The key of the tag
        in: path
        maxLength: 64
        name: key
        pattern: ^[a-zA-Z0-9_.@-]+$
        required: true
        type: string
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: delete devices_v2_tags
      tags:
      - devices_v2_tags
  /iot/v2/devices/{id}/webhooks:
    put:
      description: Creates a new webhook associated to a device
      operationId: devices_v2_webhooks#create
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/devicev2.webhook'
      produces:
      - application/vnd.arduino.devicev2.webhook+json
      - application/vnd.goa.error+json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ArduinoDevicev2Webhook'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "412":
          description: Precondition Failed
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: create devices_v2_webhooks
      tags:
      - devices_v2_webhooks
  /iot/v2/devices/{id}/webhooks/{wid}:
    delete:
      description: Removes a webhook associated to a device
      operationId: devices_v2_webhooks#delete
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      - description: The id of the webhook
        in: path
        name: wid
        required: true
        type: string
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: delete devices_v2_webhooks
      tags:
      - devices_v2_webhooks
  /iot/v2/devices/{id}/webhooks/test:
    post:
      description: Tests a webhook
      operationId: devices_v2_webhooks#test
      parameters:
      - description: The id of the device
        in: path
        name: id
        required: true
        type: string
      - description: The id of the webhook
        in: query
        name: wid
        required: false
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/devicev2.webhook'
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: test devices_v2_webhooks
      tags:
      - devices_v2_webhooks
  /iot/v2/devices_tags:
    get:
      description: Returns the list of unique tag keys associated to the user's devices
      operationId: devices_tags_v2#list
      produces:
      - application/json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: list devices_tags_v2
      tags:
      - devices_tags_v2
  /iot/v2/series/batch_query:
    post:
      description: Returns the batch of time-series aggregated samples
      operationId: series_v2#batch_query
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/BatchQueryRequestsMediaV1'
      produces:
      - application/vnd.arduino.series.batch+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoSeriesBatch'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "501":
          description: Not Implemented
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: batch_query series_v2
      tags:
      - series_v2
  /iot/v2/series/batch_query_raw:
    post:
      description: Returns the batch of time-series raw samples
      operationId: series_v2#batch_query_raw
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/BatchQueryRawRequestsMediaV1'
      produces:
      - application/vnd.arduino.series.raw.batch+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoSeriesRawBatch'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "501":
          description: Not Implemented
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: batch_query_raw series_v2
      tags:
      - series_v2
  /iot/v2/series/batch_query_raw/lastvalue:
    post:
      description: Returns the batch of time-series data raw
      operationId: series_v2#batch_query_raw_last_value
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/BatchLastValueRequestsMediaV1'
      produces:
      - application/vnd.arduino.series.raw.batch.lastvalue+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoSeriesRawBatchLastvalue'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "501":
          description: Not Implemented
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: batch_query_raw_last_value series_v2
      tags:
      - series_v2
  /iot/v2/series/historic_data:
    post:
      description: Request sending of historical data of properties by email
      operationId: series_v2#historic_data
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/HistoricDataRequest'
      produces:
      - application/vnd.goa.error+json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: historic_data series_v2
      tags:
      - series_v2
  /iot/v2/things:
    get:
      description: Returns the list of things associated to the user
      operationId: things_v2#list
      parameters:
      - default: false
        description: If true, returns all the things
        in: query
        name: across_user_ids
        required: false
        type: boolean
      - description: The id of the device you want to filter
        in: query
        name: device_id
        required: false
        type: string
      - description: Filter only the desired things
        in: query
        items:
          type: string
        name: ids
        required: false
        type: array
      - default: false
        description: If true, shows the soft deleted things
        in: query
        name: show_deleted
        required: false
        type: boolean
      - default: false
        description: If true, returns things with their properties, and last values
        in: query
        name: show_properties
        required: false
        type: boolean
      - description: Filter by tags
        in: query
        items:
          maxLength: 129
          pattern: ^[a-zA-Z0-9_.@-]+:[a-zA-Z0-9_.@-]+$
          type: string
        name: tags
        required: false
        type: array
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.thing+json; type=collection
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoThingCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: list things_v2
      tags:
      - things_v2
    put:
      description: Creates a new thing associated to the user
      operationId: things_v2#create
      parameters:
      - default: false
        description: If true, detach device from the other thing, and attach to this
          thing
        in: query
        name: force
        required: false
        type: boolean
      - in: header
        name: X-Organization
        required: false
        type: string
      - description: Payload to create a new thing
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/ThingCreate'
      produces:
      - application/vnd.arduino.thing+json
      - application/vnd.goa.error+json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ArduinoThing'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error'
        "412":
          description: Precondition Failed
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: create things_v2
      tags:
      - things_v2
  /iot/v2/things/{id}:
    delete:
      description: Removes a thing associated to the user
      operationId: things_v2#delete
      parameters:
      - default: false
        description: If true, hard delete the thing
        in: query
        name: force
        required: false
        type: boolean
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: delete things_v2
      tags:
      - things_v2
    get:
      description: Returns the thing requested by the user
      operationId: things_v2#show
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - default: false
        description: If true, shows the soft deleted thing
        in: query
        name: show_deleted
        required: false
        type: boolean
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.thing+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoThing'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: show things_v2
      tags:
      - things_v2
    post:
      description: Updates a thing associated to the user
      operationId: things_v2#update
      parameters:
      - default: false
        description: If true, detach device from the other thing, and attach to this
          thing
        in: query
        name: force
        required: false
        type: boolean
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      - description: Payload to update an existing thing
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/thingUpdate'
      produces:
      - application/vnd.arduino.thing+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoThing'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error'
        "412":
          description: Precondition Failed
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: update things_v2
      tags:
      - things_v2
  /iot/v2/things/{id}/clone:
    put:
      description: Clone a given thing
      operationId: things_v2#clone
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      - description: Payload to clone a new thing from an existing one
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/ThingClone'
      produces:
      - application/vnd.arduino.thing+json
      - application/vnd.goa.error+json
      responses:
        "201":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoThing'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: clone things_v2
      tags:
      - things_v2
  /iot/v2/things/{id}/properties:
    get:
      description: Returns the list of properties associated to the thing
      operationId: properties_v2#list
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - default: false
        description: If true, shows the soft deleted properties
        in: query
        name: show_deleted
        required: false
        type: boolean
      - description: The id of the organization
        in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.property+json; type=collection
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoPropertyCollection'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: list properties_v2
      tags:
      - properties_v2
    put:
      description: Creates a new property associated to a thing
      operationId: properties_v2#create
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - description: The id of the organization
        in: header
        name: X-Organization
        required: false
        type: string
      - description: PropertyPayload describes a property of a thing. No field is
          mandatory
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/property'
      produces:
      - application/vnd.arduino.property+json
      - application/vnd.goa.error+json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ArduinoProperty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "412":
          description: Precondition Failed
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: create properties_v2
      tags:
      - properties_v2
  /iot/v2/things/{id}/properties/{pid}:
    delete:
      description: Removes a property associated to a thing
      operationId: properties_v2#delete
      parameters:
      - default: false
        description: If true, hard delete the property
        in: query
        name: force
        required: false
        type: boolean
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - description: The id of the property
        in: path
        name: pid
        required: true
        type: string
      - description: The id of the organization
        in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: delete properties_v2
      tags:
      - properties_v2
    get:
      description: Returns the property requested by the user
      operationId: properties_v2#show
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - description: The id of the property
        in: path
        name: pid
        required: true
        type: string
      - default: false
        description: If true, shows the soft deleted properties
        in: query
        name: show_deleted
        required: false
        type: boolean
      - description: The id of the organization
        in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.property+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoProperty'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: show properties_v2
      tags:
      - properties_v2
    post:
      description: Updates a property associated to a thing
      operationId: properties_v2#update
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - description: The id of the property
        in: path
        name: pid
        required: true
        type: string
      - description: The id of the organization
        in: header
        name: X-Organization
        required: false
        type: string
      - description: PropertyPayload describes a property of a thing. No field is
          mandatory
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/property'
      produces:
      - application/vnd.arduino.property+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoProperty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: update properties_v2
      tags:
      - properties_v2
  /iot/v2/things/{id}/properties/{pid}/publish:
    put:
      description: Publish a property value to MQTT
      operationId: properties_v2#publish
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - description: The id of the property
        in: path
        name: pid
        required: true
        type: string
      - description: The id of the organization
        in: header
        name: X-Organization
        required: false
        type: string
      - description: PropertyValuePayload describes a property value
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/propertyValue'
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: publish properties_v2
      tags:
      - properties_v2
  /iot/v2/things/{id}/properties/{pid}/timeseries:
    get:
      description: 'Get numerical property''s historic data binned on a specified
        time interval (note: the total number of data points should NOT be greater
        than 1000 otherwise the result will be truncated)'
      operationId: properties_v2#timeseries
      parameters:
      - description: Samples aggregation statistic. Supported aggregations AVG|MAX|MIN|COUNT|SUM|PCT_99|PCT_95|PCT_90|PCT_75|PCT_50|PCT_15|PCT_5
        enum:
        - AVG
        - MIN
        - MAX
        - SUM
        - COUNT
        - PCT_99
        - PCT_95
        - PCT_90
        - PCT_75
        - PCT_50
        - PCT_15
        - PCT_5
        in: query
        name: aggregation
        required: false
        type: string
      - default: false
        description: Whether data's ordering (by time) should be descending
        in: query
        name: desc
        required: false
        type: boolean
      - description: 'Get data with a timestamp >= to this date (default: 2 weeks
          ago, min: 1842-01-01T00:00:00Z, max: 2242-01-01T00:00:00Z)'
        in: query
        name: from
        required: false
        type: string
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - description: 'Binning interval in seconds (defaut: the smallest possible value
          compatibly with the limit of 1000 data points in the response)'
        in: query
        minimum: 1
        name: interval
        required: false
        type: integer
      - description: ID of a numerical property
        in: path
        name: pid
        required: true
        type: string
      - description: 'Get data with a timestamp < to this date (default: now, min:
          1842-01-01T00:00:00Z, max: 2242-01-01T00:00:00Z)'
        in: query
        name: to
        required: false
        type: string
      - description: The id of the organization
        in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.timeseriesmedia+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoTimeseriesmedia'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: timeseries properties_v2
      tags:
      - properties_v2
  /iot/v2/things/{id}/sketch:
    delete:
      operationId: things_v2#deleteSketch
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.thing+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoThing'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: deleteSketch things_v2
      tags:
      - things_v2
    put:
      description: Creates a new sketch thing associated to the thing
      operationId: things_v2#createSketch
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      - description: ThingSketchPayload describes a sketch of a thing
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/thingSketch'
      produces:
      - application/vnd.arduino.thing+json
      - application/vnd.goa.error+json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ArduinoThing'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "412":
          description: Precondition Failed
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: createSketch things_v2
      tags:
      - things_v2
  /iot/v2/things/{id}/sketch/{sketchId}:
    put:
      description: Update an existing thing sketch
      operationId: things_v2#updateSketch
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - description: The id of the sketch
        in: path
        name: sketchId
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      - in: body
        name: payload
        required: false
        schema:
          $ref: '#/definitions/updateSketch'
      produces:
      - application/vnd.arduino.thing+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoThing'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "412":
          description: Precondition Failed
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: updateSketch things_v2
      tags:
      - things_v2
  /iot/v2/things/{id}/tags:
    get:
      description: List tags associated to the thing.
      operationId: things_v2_tags#list
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/vnd.arduino.tags+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoTags'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: list things_v2_tags
      tags:
      - things_v2_tags
    put:
      description: Creates or updates a tag associated to the thing.
      operationId: things_v2_tags#upsert
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/tag'
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: upsert things_v2_tags
      tags:
      - things_v2_tags
  /iot/v2/things/{id}/tags/{key}:
    delete:
      description: Delete a tag associated to the thing given its key.
      operationId: things_v2_tags#delete
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - description: The key of the tag
        in: path
        maxLength: 64
        name: key
        required: true
        type: string
      produces:
      - application/vnd.goa.error+json
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: delete things_v2_tags
      tags:
      - things_v2_tags
  /iot/v2/things/{id}/template:
    get:
      description: Extract template from the given thing
      operationId: things_v2#template
      parameters:
      - description: The id of the thing
        in: path
        name: id
        required: true
        type: string
      - in: header
        name: X-Organization
        required: false
        type: string
      produces:
      - application/vnd.arduino.thingtemplate+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoThingtemplate'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: template things_v2
      tags:
      - things_v2
  /iot/v2/things_tags:
    get:
      description: Returns the list of unique tag keys associated to the user's things
      operationId: things_tags_v2#list
      produces:
      - application/json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: list things_tags_v2
      tags:
      - things_tags_v2
  /iot/v2/timezones:
    get:
      description: Get the list of time zones.
      operationId: timezones#list
      produces:
      - application/vnd.arduino.timezones+json
      - application/vnd.goa.error+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArduinoTimezones'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - https
      security:
      - oauth2: []
      summary: list timezones
      tags:
      - timezones
produces:
- application/json
responses:
  Accepted:
    description: Accepted
  BadRequest:
    description: Bad Request
  NotFound:
    description: Not Found
  NotImplemented:
    description: Not Implemented
  OK:
    description: OK
  PreconditionFailed:
    description: Precondition Failed
  Unauthorized:
    description: Unauthorized
schemes:
- https
securityDefinitions:
  oauth2:
    type: oauth2
swagger: "2.0"
tags:
- description: Legacy IoT APIs
  name: devices_v1
- description: Provides a set of endpoints to manage user devices
  name: devices_v2
- description: Provides a set of endpoints to manage the certs of a device
  name: devices_v2_certs
- description: Provides a set of endpoints to manage the metadata of a device
  name: devices_v2_metadata
- description: Provides a set of endpoints to manage the password of a device
  name: devices_v2_pass
- description: Provides a set of endpoints to manage the pubkeys of a device
  name: devices_v2_pubkeys
- description: A set of api to manage resources externally
  name: manage
- description: Provides a set of endpoints to manage the properties of a thing
  name: properties_v1
- description: Provides a set of endpoints to manage the things of a user
  name: things_v1
